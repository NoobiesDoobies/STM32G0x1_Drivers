
STM32G0x1_Drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000bc  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000013bc  080000bc  080000bc  000010bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000028  08001478  08001478  00002478  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080014a0  080014a0  00003064  2**0
                  CONTENTS
  4 .ARM          00000000  080014a0  080014a0  00003064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080014a0  080014a0  00003064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080014a0  080014a0  000024a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080014a4  080014a4  000024a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000064  20000000  080014a8  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000218  20000064  0800150c  00003064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000027c  0800150c  0000327c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00003064  2**0
                  CONTENTS, READONLY
 12 .debug_info   000009c6  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000365  00000000  00000000  00003a52  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000d8  00000000  00000000  00003db8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000091  00000000  00000000  00003e90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002304  00000000  00000000  00003f21  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000101b  00000000  00000000  00006225  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00007e4f  00000000  00000000  00007240  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000f08f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000bf0  00000000  00000000  0000f0d4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000067  00000000  00000000  0000fcc4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000bc <__do_global_dtors_aux>:
 80000bc:	b510      	push	{r4, lr}
 80000be:	4c06      	ldr	r4, [pc, #24]	@ (80000d8 <__do_global_dtors_aux+0x1c>)
 80000c0:	7823      	ldrb	r3, [r4, #0]
 80000c2:	2b00      	cmp	r3, #0
 80000c4:	d107      	bne.n	80000d6 <__do_global_dtors_aux+0x1a>
 80000c6:	4b05      	ldr	r3, [pc, #20]	@ (80000dc <__do_global_dtors_aux+0x20>)
 80000c8:	2b00      	cmp	r3, #0
 80000ca:	d002      	beq.n	80000d2 <__do_global_dtors_aux+0x16>
 80000cc:	4804      	ldr	r0, [pc, #16]	@ (80000e0 <__do_global_dtors_aux+0x24>)
 80000ce:	e000      	b.n	80000d2 <__do_global_dtors_aux+0x16>
 80000d0:	bf00      	nop
 80000d2:	2301      	movs	r3, #1
 80000d4:	7023      	strb	r3, [r4, #0]
 80000d6:	bd10      	pop	{r4, pc}
 80000d8:	20000064 	.word	0x20000064
 80000dc:	00000000 	.word	0x00000000
 80000e0:	08001460 	.word	0x08001460

080000e4 <frame_dummy>:
 80000e4:	4b04      	ldr	r3, [pc, #16]	@ (80000f8 <frame_dummy+0x14>)
 80000e6:	b510      	push	{r4, lr}
 80000e8:	2b00      	cmp	r3, #0
 80000ea:	d003      	beq.n	80000f4 <frame_dummy+0x10>
 80000ec:	4903      	ldr	r1, [pc, #12]	@ (80000fc <frame_dummy+0x18>)
 80000ee:	4804      	ldr	r0, [pc, #16]	@ (8000100 <frame_dummy+0x1c>)
 80000f0:	e000      	b.n	80000f4 <frame_dummy+0x10>
 80000f2:	bf00      	nop
 80000f4:	bd10      	pop	{r4, pc}
 80000f6:	46c0      	nop			@ (mov r8, r8)
 80000f8:	00000000 	.word	0x00000000
 80000fc:	20000068 	.word	0x20000068
 8000100:	08001460 	.word	0x08001460

08000104 <strlen>:
 8000104:	2300      	movs	r3, #0
 8000106:	5cc2      	ldrb	r2, [r0, r3]
 8000108:	3301      	adds	r3, #1
 800010a:	2a00      	cmp	r2, #0
 800010c:	d1fb      	bne.n	8000106 <strlen+0x2>
 800010e:	1e58      	subs	r0, r3, #1
 8000110:	4770      	bx	lr
	...

08000114 <delay>:


#include "stm32g0x1.h"

void delay(void)
{
 8000114:	b580      	push	{r7, lr}
 8000116:	b082      	sub	sp, #8
 8000118:	af00      	add	r7, sp, #0
	for(uint32_t i=0; i<500*1000;i++);
 800011a:	2300      	movs	r3, #0
 800011c:	607b      	str	r3, [r7, #4]
 800011e:	e002      	b.n	8000126 <delay+0x12>
 8000120:	687b      	ldr	r3, [r7, #4]
 8000122:	3301      	adds	r3, #1
 8000124:	607b      	str	r3, [r7, #4]
 8000126:	687b      	ldr	r3, [r7, #4]
 8000128:	4a03      	ldr	r2, [pc, #12]	@ (8000138 <delay+0x24>)
 800012a:	4293      	cmp	r3, r2
 800012c:	d9f8      	bls.n	8000120 <delay+0xc>
}
 800012e:	46c0      	nop			@ (mov r8, r8)
 8000130:	46c0      	nop			@ (mov r8, r8)
 8000132:	46bd      	mov	sp, r7
 8000134:	b002      	add	sp, #8
 8000136:	bd80      	pop	{r7, pc}
 8000138:	0007a11f 	.word	0x0007a11f

0800013c <main>:

extern void initialise_monitor_handles(void);

int main(void)
{
 800013c:	b580      	push	{r7, lr}
 800013e:	b084      	sub	sp, #16
 8000140:	af00      	add	r7, sp, #0
	initialise_monitor_handles();
 8000142:	f001 f913 	bl	800136c <initialise_monitor_handles>
	GPIO_Handle_t GpioLed;

	GpioLed.pGPIOx = GPIOA;
 8000146:	1d3b      	adds	r3, r7, #4
 8000148:	22a0      	movs	r2, #160	@ 0xa0
 800014a:	05d2      	lsls	r2, r2, #23
 800014c:	601a      	str	r2, [r3, #0]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 800014e:	1d3b      	adds	r3, r7, #4
 8000150:	2205      	movs	r2, #5
 8000152:	711a      	strb	r2, [r3, #4]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_OUTPUT_MODE;
 8000154:	1d3b      	adds	r3, r7, #4
 8000156:	2201      	movs	r2, #1
 8000158:	715a      	strb	r2, [r3, #5]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_VERY_HIGH;
 800015a:	1d3b      	adds	r3, r7, #4
 800015c:	2203      	movs	r2, #3
 800015e:	719a      	strb	r2, [r3, #6]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000160:	1d3b      	adds	r3, r7, #4
 8000162:	2200      	movs	r2, #0
 8000164:	721a      	strb	r2, [r3, #8]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000166:	1d3b      	adds	r3, r7, #4
 8000168:	2200      	movs	r2, #0
 800016a:	71da      	strb	r2, [r3, #7]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 800016c:	23a0      	movs	r3, #160	@ 0xa0
 800016e:	05db      	lsls	r3, r3, #23
 8000170:	2101      	movs	r1, #1
 8000172:	0018      	movs	r0, r3
 8000174:	f000 f948 	bl	8000408 <GPIO_PeriClockControl>
	GPIO_InitPin(&GpioLed);
 8000178:	1d3b      	adds	r3, r7, #4
 800017a:	0018      	movs	r0, r3
 800017c:	f000 f86f 	bl	800025e <GPIO_InitPin>


	while(1)
	{
		printf("toggling :D\n");
 8000180:	4b06      	ldr	r3, [pc, #24]	@ (800019c <main+0x60>)
 8000182:	0018      	movs	r0, r3
 8000184:	f000 fb10 	bl	80007a8 <puts>
		GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
 8000188:	23a0      	movs	r3, #160	@ 0xa0
 800018a:	05db      	lsls	r3, r3, #23
 800018c:	2105      	movs	r1, #5
 800018e:	0018      	movs	r0, r3
 8000190:	f000 f9da 	bl	8000548 <GPIO_ToggleOutputPin>
		delay();
 8000194:	f7ff ffbe 	bl	8000114 <delay>
	{
 8000198:	46c0      	nop			@ (mov r8, r8)
 800019a:	e7f1      	b.n	8000180 <main+0x44>
 800019c:	08001478 	.word	0x08001478

080001a0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80001a0:	b580      	push	{r7, lr}
 80001a2:	b086      	sub	sp, #24
 80001a4:	af00      	add	r7, sp, #0
 80001a6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80001a8:	4a14      	ldr	r2, [pc, #80]	@ (80001fc <_sbrk+0x5c>)
 80001aa:	4b15      	ldr	r3, [pc, #84]	@ (8000200 <_sbrk+0x60>)
 80001ac:	1ad3      	subs	r3, r2, r3
 80001ae:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80001b0:	697b      	ldr	r3, [r7, #20]
 80001b2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80001b4:	4b13      	ldr	r3, [pc, #76]	@ (8000204 <_sbrk+0x64>)
 80001b6:	681b      	ldr	r3, [r3, #0]
 80001b8:	2b00      	cmp	r3, #0
 80001ba:	d102      	bne.n	80001c2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80001bc:	4b11      	ldr	r3, [pc, #68]	@ (8000204 <_sbrk+0x64>)
 80001be:	4a12      	ldr	r2, [pc, #72]	@ (8000208 <_sbrk+0x68>)
 80001c0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80001c2:	4b10      	ldr	r3, [pc, #64]	@ (8000204 <_sbrk+0x64>)
 80001c4:	681a      	ldr	r2, [r3, #0]
 80001c6:	687b      	ldr	r3, [r7, #4]
 80001c8:	18d3      	adds	r3, r2, r3
 80001ca:	693a      	ldr	r2, [r7, #16]
 80001cc:	429a      	cmp	r2, r3
 80001ce:	d207      	bcs.n	80001e0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80001d0:	f000 fc36 	bl	8000a40 <__errno>
 80001d4:	0003      	movs	r3, r0
 80001d6:	220c      	movs	r2, #12
 80001d8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80001da:	2301      	movs	r3, #1
 80001dc:	425b      	negs	r3, r3
 80001de:	e009      	b.n	80001f4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80001e0:	4b08      	ldr	r3, [pc, #32]	@ (8000204 <_sbrk+0x64>)
 80001e2:	681b      	ldr	r3, [r3, #0]
 80001e4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80001e6:	4b07      	ldr	r3, [pc, #28]	@ (8000204 <_sbrk+0x64>)
 80001e8:	681a      	ldr	r2, [r3, #0]
 80001ea:	687b      	ldr	r3, [r7, #4]
 80001ec:	18d2      	adds	r2, r2, r3
 80001ee:	4b05      	ldr	r3, [pc, #20]	@ (8000204 <_sbrk+0x64>)
 80001f0:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 80001f2:	68fb      	ldr	r3, [r7, #12]
}
 80001f4:	0018      	movs	r0, r3
 80001f6:	46bd      	mov	sp, r7
 80001f8:	b006      	add	sp, #24
 80001fa:	bd80      	pop	{r7, pc}
 80001fc:	20024000 	.word	0x20024000
 8000200:	00000400 	.word	0x00000400
 8000204:	20000080 	.word	0x20000080
 8000208:	20000280 	.word	0x20000280

0800020c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800020c:	480d      	ldr	r0, [pc, #52]	@ (8000244 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800020e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000210:	e000      	b.n	8000214 <Reset_Handler+0x8>
 8000212:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000214:	480c      	ldr	r0, [pc, #48]	@ (8000248 <LoopForever+0x6>)
  ldr r1, =_edata
 8000216:	490d      	ldr	r1, [pc, #52]	@ (800024c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000218:	4a0d      	ldr	r2, [pc, #52]	@ (8000250 <LoopForever+0xe>)
  movs r3, #0
 800021a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800021c:	e002      	b.n	8000224 <LoopCopyDataInit>

0800021e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800021e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000220:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000222:	3304      	adds	r3, #4

08000224 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000224:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000226:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000228:	d3f9      	bcc.n	800021e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800022a:	4a0a      	ldr	r2, [pc, #40]	@ (8000254 <LoopForever+0x12>)
  ldr r4, =_ebss
 800022c:	4c0a      	ldr	r4, [pc, #40]	@ (8000258 <LoopForever+0x16>)
  movs r3, #0
 800022e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000230:	e001      	b.n	8000236 <LoopFillZerobss>

08000232 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000232:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000234:	3204      	adds	r2, #4

08000236 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000236:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000238:	d3fb      	bcc.n	8000232 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800023a:	f000 fc07 	bl	8000a4c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800023e:	f7ff ff7d 	bl	800013c <main>

08000242 <LoopForever>:

LoopForever:
  b LoopForever
 8000242:	e7fe      	b.n	8000242 <LoopForever>
  ldr   r0, =_estack
 8000244:	20024000 	.word	0x20024000
  ldr r0, =_sdata
 8000248:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800024c:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000250:	080014a8 	.word	0x080014a8
  ldr r2, =_sbss
 8000254:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000258:	2000027c 	.word	0x2000027c

0800025c <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800025c:	e7fe      	b.n	800025c <ADC_COMP_IRQHandler>

0800025e <GPIO_InitPin>:
 *
 * @Note               - none
 *
 */
void GPIO_InitPin(GPIO_Handle_t *pGPIOHandle)
{
 800025e:	b5b0      	push	{r4, r5, r7, lr}
 8000260:	b084      	sub	sp, #16
 8000262:	af00      	add	r7, sp, #0
 8000264:	6078      	str	r0, [r7, #4]
    uint32_t temp = 0;
 8000266:	2300      	movs	r3, #0
 8000268:	60fb      	str	r3, [r7, #12]

    // 1. Configure the mode of the GPIO pin

    if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= (GPIO_ANALOG_MODE))
 800026a:	687b      	ldr	r3, [r7, #4]
 800026c:	795b      	ldrb	r3, [r3, #5]
 800026e:	2b03      	cmp	r3, #3
 8000270:	d81f      	bhi.n	80002b2 <GPIO_InitPin+0x54>
    {
        // The pin is non-interrupt mode
        temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000272:	687b      	ldr	r3, [r7, #4]
 8000274:	795b      	ldrb	r3, [r3, #5]
 8000276:	001a      	movs	r2, r3
 8000278:	687b      	ldr	r3, [r7, #4]
 800027a:	791b      	ldrb	r3, [r3, #4]
 800027c:	005b      	lsls	r3, r3, #1
 800027e:	409a      	lsls	r2, r3
 8000280:	0013      	movs	r3, r2
 8000282:	60fb      	str	r3, [r7, #12]
        pGPIOHandle->pGPIOx->MODER &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); // Clearing
 8000284:	687b      	ldr	r3, [r7, #4]
 8000286:	681b      	ldr	r3, [r3, #0]
 8000288:	681a      	ldr	r2, [r3, #0]
 800028a:	687b      	ldr	r3, [r7, #4]
 800028c:	791b      	ldrb	r3, [r3, #4]
 800028e:	005b      	lsls	r3, r3, #1
 8000290:	2103      	movs	r1, #3
 8000292:	4099      	lsls	r1, r3
 8000294:	000b      	movs	r3, r1
 8000296:	43db      	mvns	r3, r3
 8000298:	0019      	movs	r1, r3
 800029a:	687b      	ldr	r3, [r7, #4]
 800029c:	681b      	ldr	r3, [r3, #0]
 800029e:	400a      	ands	r2, r1
 80002a0:	601a      	str	r2, [r3, #0]
        pGPIOHandle->pGPIOx->MODER |= temp;
 80002a2:	687b      	ldr	r3, [r7, #4]
 80002a4:	681b      	ldr	r3, [r3, #0]
 80002a6:	6819      	ldr	r1, [r3, #0]
 80002a8:	687b      	ldr	r3, [r7, #4]
 80002aa:	681b      	ldr	r3, [r3, #0]
 80002ac:	68fa      	ldr	r2, [r7, #12]
 80002ae:	430a      	orrs	r2, r1
 80002b0:	601a      	str	r2, [r3, #0]
    }
    else
    {
    }

    temp = 0;
 80002b2:	2300      	movs	r3, #0
 80002b4:	60fb      	str	r3, [r7, #12]

    // 2. Configure the speed
    temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80002b6:	687b      	ldr	r3, [r7, #4]
 80002b8:	799b      	ldrb	r3, [r3, #6]
 80002ba:	001a      	movs	r2, r3
 80002bc:	687b      	ldr	r3, [r7, #4]
 80002be:	791b      	ldrb	r3, [r3, #4]
 80002c0:	005b      	lsls	r3, r3, #1
 80002c2:	409a      	lsls	r2, r3
 80002c4:	0013      	movs	r3, r2
 80002c6:	60fb      	str	r3, [r7, #12]
    pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); // Clearing 2 bits
 80002c8:	687b      	ldr	r3, [r7, #4]
 80002ca:	681b      	ldr	r3, [r3, #0]
 80002cc:	689a      	ldr	r2, [r3, #8]
 80002ce:	687b      	ldr	r3, [r7, #4]
 80002d0:	791b      	ldrb	r3, [r3, #4]
 80002d2:	005b      	lsls	r3, r3, #1
 80002d4:	2103      	movs	r1, #3
 80002d6:	4099      	lsls	r1, r3
 80002d8:	000b      	movs	r3, r1
 80002da:	43db      	mvns	r3, r3
 80002dc:	0019      	movs	r1, r3
 80002de:	687b      	ldr	r3, [r7, #4]
 80002e0:	681b      	ldr	r3, [r3, #0]
 80002e2:	400a      	ands	r2, r1
 80002e4:	609a      	str	r2, [r3, #8]
    pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80002e6:	687b      	ldr	r3, [r7, #4]
 80002e8:	681b      	ldr	r3, [r3, #0]
 80002ea:	6899      	ldr	r1, [r3, #8]
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	681b      	ldr	r3, [r3, #0]
 80002f0:	68fa      	ldr	r2, [r7, #12]
 80002f2:	430a      	orrs	r2, r1
 80002f4:	609a      	str	r2, [r3, #8]

    temp = 0;
 80002f6:	2300      	movs	r3, #0
 80002f8:	60fb      	str	r3, [r7, #12]

    // 3. Configure the pull-up/pull-down settings
    temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80002fa:	687b      	ldr	r3, [r7, #4]
 80002fc:	79db      	ldrb	r3, [r3, #7]
 80002fe:	001a      	movs	r2, r3
 8000300:	687b      	ldr	r3, [r7, #4]
 8000302:	791b      	ldrb	r3, [r3, #4]
 8000304:	005b      	lsls	r3, r3, #1
 8000306:	409a      	lsls	r2, r3
 8000308:	0013      	movs	r3, r2
 800030a:	60fb      	str	r3, [r7, #12]
    pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); // Clearing
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	681b      	ldr	r3, [r3, #0]
 8000310:	68da      	ldr	r2, [r3, #12]
 8000312:	687b      	ldr	r3, [r7, #4]
 8000314:	791b      	ldrb	r3, [r3, #4]
 8000316:	005b      	lsls	r3, r3, #1
 8000318:	2103      	movs	r1, #3
 800031a:	4099      	lsls	r1, r3
 800031c:	000b      	movs	r3, r1
 800031e:	43db      	mvns	r3, r3
 8000320:	0019      	movs	r1, r3
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	681b      	ldr	r3, [r3, #0]
 8000326:	400a      	ands	r2, r1
 8000328:	60da      	str	r2, [r3, #12]
    pGPIOHandle->pGPIOx->PUPDR |= temp;
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	681b      	ldr	r3, [r3, #0]
 800032e:	68d9      	ldr	r1, [r3, #12]
 8000330:	687b      	ldr	r3, [r7, #4]
 8000332:	681b      	ldr	r3, [r3, #0]
 8000334:	68fa      	ldr	r2, [r7, #12]
 8000336:	430a      	orrs	r2, r1
 8000338:	60da      	str	r2, [r3, #12]

    temp = 0;
 800033a:	2300      	movs	r3, #0
 800033c:	60fb      	str	r3, [r7, #12]

    // 4. Configure the output type
    temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	7a1b      	ldrb	r3, [r3, #8]
 8000342:	001a      	movs	r2, r3
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	791b      	ldrb	r3, [r3, #4]
 8000348:	409a      	lsls	r2, r3
 800034a:	0013      	movs	r3, r2
 800034c:	60fb      	str	r3, [r7, #12]
    pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // Clearing
 800034e:	687b      	ldr	r3, [r7, #4]
 8000350:	681b      	ldr	r3, [r3, #0]
 8000352:	685a      	ldr	r2, [r3, #4]
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	791b      	ldrb	r3, [r3, #4]
 8000358:	0019      	movs	r1, r3
 800035a:	2301      	movs	r3, #1
 800035c:	408b      	lsls	r3, r1
 800035e:	43db      	mvns	r3, r3
 8000360:	0019      	movs	r1, r3
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	681b      	ldr	r3, [r3, #0]
 8000366:	400a      	ands	r2, r1
 8000368:	605a      	str	r2, [r3, #4]
    pGPIOHandle->pGPIOx->OTYPER |= temp;
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	6859      	ldr	r1, [r3, #4]
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	681b      	ldr	r3, [r3, #0]
 8000374:	68fa      	ldr	r2, [r7, #12]
 8000376:	430a      	orrs	r2, r1
 8000378:	605a      	str	r2, [r3, #4]

    temp = 0;
 800037a:	2300      	movs	r3, #0
 800037c:	60fb      	str	r3, [r7, #12]

    // 5. Configure the alternate function
    if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_ALT_FUNCTION_MODE)
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	795b      	ldrb	r3, [r3, #5]
 8000382:	2b02      	cmp	r3, #2
 8000384:	d13b      	bne.n	80003fe <GPIO_InitPin+0x1a0>
    {
        // Configure the alternate function registers
        uint8_t temp1, temp2;
        temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;                                             // to determine AFRL or AFRH
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	791a      	ldrb	r2, [r3, #4]
 800038a:	240b      	movs	r4, #11
 800038c:	193b      	adds	r3, r7, r4
 800038e:	08d2      	lsrs	r2, r2, #3
 8000390:	701a      	strb	r2, [r3, #0]
        temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;                                             // to determine the bit/pin position
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	791a      	ldrb	r2, [r3, #4]
 8000396:	250a      	movs	r5, #10
 8000398:	197b      	adds	r3, r7, r5
 800039a:	2107      	movs	r1, #7
 800039c:	400a      	ands	r2, r1
 800039e:	701a      	strb	r2, [r3, #0]
        pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));                                           // Clearing 4 bits
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	681b      	ldr	r3, [r3, #0]
 80003a4:	193a      	adds	r2, r7, r4
 80003a6:	7812      	ldrb	r2, [r2, #0]
 80003a8:	3208      	adds	r2, #8
 80003aa:	0092      	lsls	r2, r2, #2
 80003ac:	58d1      	ldr	r1, [r2, r3]
 80003ae:	197b      	adds	r3, r7, r5
 80003b0:	781b      	ldrb	r3, [r3, #0]
 80003b2:	009b      	lsls	r3, r3, #2
 80003b4:	220f      	movs	r2, #15
 80003b6:	409a      	lsls	r2, r3
 80003b8:	0013      	movs	r3, r2
 80003ba:	43db      	mvns	r3, r3
 80003bc:	0018      	movs	r0, r3
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	681b      	ldr	r3, [r3, #0]
 80003c2:	193a      	adds	r2, r7, r4
 80003c4:	7812      	ldrb	r2, [r2, #0]
 80003c6:	4001      	ands	r1, r0
 80003c8:	3208      	adds	r2, #8
 80003ca:	0092      	lsls	r2, r2, #2
 80003cc:	50d1      	str	r1, [r2, r3]
        pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2)); // 4 bits for each pin
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	681b      	ldr	r3, [r3, #0]
 80003d2:	193a      	adds	r2, r7, r4
 80003d4:	7812      	ldrb	r2, [r2, #0]
 80003d6:	3208      	adds	r2, #8
 80003d8:	0092      	lsls	r2, r2, #2
 80003da:	58d1      	ldr	r1, [r2, r3]
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	7a5b      	ldrb	r3, [r3, #9]
 80003e0:	001a      	movs	r2, r3
 80003e2:	197b      	adds	r3, r7, r5
 80003e4:	781b      	ldrb	r3, [r3, #0]
 80003e6:	009b      	lsls	r3, r3, #2
 80003e8:	409a      	lsls	r2, r3
 80003ea:	0013      	movs	r3, r2
 80003ec:	0018      	movs	r0, r3
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	681b      	ldr	r3, [r3, #0]
 80003f2:	193a      	adds	r2, r7, r4
 80003f4:	7812      	ldrb	r2, [r2, #0]
 80003f6:	4301      	orrs	r1, r0
 80003f8:	3208      	adds	r2, #8
 80003fa:	0092      	lsls	r2, r2, #2
 80003fc:	50d1      	str	r1, [r2, r3]
    }
}
 80003fe:	46c0      	nop			@ (mov r8, r8)
 8000400:	46bd      	mov	sp, r7
 8000402:	b004      	add	sp, #16
 8000404:	bdb0      	pop	{r4, r5, r7, pc}
	...

08000408 <GPIO_PeriClockControl>:
 *
 * @Note               - none
 *
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 8000408:	b580      	push	{r7, lr}
 800040a:	b082      	sub	sp, #8
 800040c:	af00      	add	r7, sp, #0
 800040e:	6078      	str	r0, [r7, #4]
 8000410:	000a      	movs	r2, r1
 8000412:	1cfb      	adds	r3, r7, #3
 8000414:	701a      	strb	r2, [r3, #0]
    if (EnorDi == ENABLE)
 8000416:	1cfb      	adds	r3, r7, #3
 8000418:	781b      	ldrb	r3, [r3, #0]
 800041a:	2b01      	cmp	r3, #1
 800041c:	d142      	bne.n	80004a4 <GPIO_PeriClockControl+0x9c>
    {
        if (pGPIOx == GPIOA)
 800041e:	687a      	ldr	r2, [r7, #4]
 8000420:	23a0      	movs	r3, #160	@ 0xa0
 8000422:	05db      	lsls	r3, r3, #23
 8000424:	429a      	cmp	r2, r3
 8000426:	d106      	bne.n	8000436 <GPIO_PeriClockControl+0x2e>
        {
            GPIOA_PCLK_EN();
 8000428:	4b41      	ldr	r3, [pc, #260]	@ (8000530 <GPIO_PeriClockControl+0x128>)
 800042a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800042c:	4b40      	ldr	r3, [pc, #256]	@ (8000530 <GPIO_PeriClockControl+0x128>)
 800042e:	2101      	movs	r1, #1
 8000430:	430a      	orrs	r2, r1
 8000432:	635a      	str	r2, [r3, #52]	@ 0x34
        else if (pGPIOx == GPIOF)
        {
            GPIOF_PCLK_DI();
        }
    }
}
 8000434:	e078      	b.n	8000528 <GPIO_PeriClockControl+0x120>
        else if (pGPIOx == GPIOB)
 8000436:	687b      	ldr	r3, [r7, #4]
 8000438:	4a3e      	ldr	r2, [pc, #248]	@ (8000534 <GPIO_PeriClockControl+0x12c>)
 800043a:	4293      	cmp	r3, r2
 800043c:	d106      	bne.n	800044c <GPIO_PeriClockControl+0x44>
            GPIOB_PCLK_EN();
 800043e:	4b3c      	ldr	r3, [pc, #240]	@ (8000530 <GPIO_PeriClockControl+0x128>)
 8000440:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8000442:	4b3b      	ldr	r3, [pc, #236]	@ (8000530 <GPIO_PeriClockControl+0x128>)
 8000444:	2102      	movs	r1, #2
 8000446:	430a      	orrs	r2, r1
 8000448:	635a      	str	r2, [r3, #52]	@ 0x34
}
 800044a:	e06d      	b.n	8000528 <GPIO_PeriClockControl+0x120>
        else if (pGPIOx == GPIOC)
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	4a3a      	ldr	r2, [pc, #232]	@ (8000538 <GPIO_PeriClockControl+0x130>)
 8000450:	4293      	cmp	r3, r2
 8000452:	d106      	bne.n	8000462 <GPIO_PeriClockControl+0x5a>
            GPIOC_PCLK_EN();
 8000454:	4b36      	ldr	r3, [pc, #216]	@ (8000530 <GPIO_PeriClockControl+0x128>)
 8000456:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8000458:	4b35      	ldr	r3, [pc, #212]	@ (8000530 <GPIO_PeriClockControl+0x128>)
 800045a:	2104      	movs	r1, #4
 800045c:	430a      	orrs	r2, r1
 800045e:	635a      	str	r2, [r3, #52]	@ 0x34
}
 8000460:	e062      	b.n	8000528 <GPIO_PeriClockControl+0x120>
        else if (pGPIOx == GPIOD)
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	4a35      	ldr	r2, [pc, #212]	@ (800053c <GPIO_PeriClockControl+0x134>)
 8000466:	4293      	cmp	r3, r2
 8000468:	d106      	bne.n	8000478 <GPIO_PeriClockControl+0x70>
            GPIOD_PCLK_EN();
 800046a:	4b31      	ldr	r3, [pc, #196]	@ (8000530 <GPIO_PeriClockControl+0x128>)
 800046c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800046e:	4b30      	ldr	r3, [pc, #192]	@ (8000530 <GPIO_PeriClockControl+0x128>)
 8000470:	2108      	movs	r1, #8
 8000472:	430a      	orrs	r2, r1
 8000474:	635a      	str	r2, [r3, #52]	@ 0x34
}
 8000476:	e057      	b.n	8000528 <GPIO_PeriClockControl+0x120>
        else if (pGPIOx == GPIOE)
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	4a31      	ldr	r2, [pc, #196]	@ (8000540 <GPIO_PeriClockControl+0x138>)
 800047c:	4293      	cmp	r3, r2
 800047e:	d106      	bne.n	800048e <GPIO_PeriClockControl+0x86>
            GPIOE_PCLK_EN();
 8000480:	4b2b      	ldr	r3, [pc, #172]	@ (8000530 <GPIO_PeriClockControl+0x128>)
 8000482:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8000484:	4b2a      	ldr	r3, [pc, #168]	@ (8000530 <GPIO_PeriClockControl+0x128>)
 8000486:	2110      	movs	r1, #16
 8000488:	430a      	orrs	r2, r1
 800048a:	635a      	str	r2, [r3, #52]	@ 0x34
}
 800048c:	e04c      	b.n	8000528 <GPIO_PeriClockControl+0x120>
        else if (pGPIOx == GPIOF)
 800048e:	687b      	ldr	r3, [r7, #4]
 8000490:	4a2c      	ldr	r2, [pc, #176]	@ (8000544 <GPIO_PeriClockControl+0x13c>)
 8000492:	4293      	cmp	r3, r2
 8000494:	d148      	bne.n	8000528 <GPIO_PeriClockControl+0x120>
            GPIOF_PCLK_EN();
 8000496:	4b26      	ldr	r3, [pc, #152]	@ (8000530 <GPIO_PeriClockControl+0x128>)
 8000498:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800049a:	4b25      	ldr	r3, [pc, #148]	@ (8000530 <GPIO_PeriClockControl+0x128>)
 800049c:	2120      	movs	r1, #32
 800049e:	430a      	orrs	r2, r1
 80004a0:	635a      	str	r2, [r3, #52]	@ 0x34
}
 80004a2:	e041      	b.n	8000528 <GPIO_PeriClockControl+0x120>
        if (pGPIOx == GPIOA)
 80004a4:	687a      	ldr	r2, [r7, #4]
 80004a6:	23a0      	movs	r3, #160	@ 0xa0
 80004a8:	05db      	lsls	r3, r3, #23
 80004aa:	429a      	cmp	r2, r3
 80004ac:	d106      	bne.n	80004bc <GPIO_PeriClockControl+0xb4>
            GPIOA_PCLK_DI();
 80004ae:	4b20      	ldr	r3, [pc, #128]	@ (8000530 <GPIO_PeriClockControl+0x128>)
 80004b0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80004b2:	4b1f      	ldr	r3, [pc, #124]	@ (8000530 <GPIO_PeriClockControl+0x128>)
 80004b4:	2101      	movs	r1, #1
 80004b6:	438a      	bics	r2, r1
 80004b8:	635a      	str	r2, [r3, #52]	@ 0x34
}
 80004ba:	e035      	b.n	8000528 <GPIO_PeriClockControl+0x120>
        else if (pGPIOx == GPIOB)
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	4a1d      	ldr	r2, [pc, #116]	@ (8000534 <GPIO_PeriClockControl+0x12c>)
 80004c0:	4293      	cmp	r3, r2
 80004c2:	d106      	bne.n	80004d2 <GPIO_PeriClockControl+0xca>
            GPIOB_PCLK_DI();
 80004c4:	4b1a      	ldr	r3, [pc, #104]	@ (8000530 <GPIO_PeriClockControl+0x128>)
 80004c6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80004c8:	4b19      	ldr	r3, [pc, #100]	@ (8000530 <GPIO_PeriClockControl+0x128>)
 80004ca:	2102      	movs	r1, #2
 80004cc:	438a      	bics	r2, r1
 80004ce:	635a      	str	r2, [r3, #52]	@ 0x34
}
 80004d0:	e02a      	b.n	8000528 <GPIO_PeriClockControl+0x120>
        else if (pGPIOx == GPIOC)
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	4a18      	ldr	r2, [pc, #96]	@ (8000538 <GPIO_PeriClockControl+0x130>)
 80004d6:	4293      	cmp	r3, r2
 80004d8:	d106      	bne.n	80004e8 <GPIO_PeriClockControl+0xe0>
            GPIOC_PCLK_DI();
 80004da:	4b15      	ldr	r3, [pc, #84]	@ (8000530 <GPIO_PeriClockControl+0x128>)
 80004dc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80004de:	4b14      	ldr	r3, [pc, #80]	@ (8000530 <GPIO_PeriClockControl+0x128>)
 80004e0:	2104      	movs	r1, #4
 80004e2:	438a      	bics	r2, r1
 80004e4:	635a      	str	r2, [r3, #52]	@ 0x34
}
 80004e6:	e01f      	b.n	8000528 <GPIO_PeriClockControl+0x120>
        else if (pGPIOx == GPIOD)
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	4a14      	ldr	r2, [pc, #80]	@ (800053c <GPIO_PeriClockControl+0x134>)
 80004ec:	4293      	cmp	r3, r2
 80004ee:	d106      	bne.n	80004fe <GPIO_PeriClockControl+0xf6>
            GPIOD_PCLK_DI();
 80004f0:	4b0f      	ldr	r3, [pc, #60]	@ (8000530 <GPIO_PeriClockControl+0x128>)
 80004f2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80004f4:	4b0e      	ldr	r3, [pc, #56]	@ (8000530 <GPIO_PeriClockControl+0x128>)
 80004f6:	2108      	movs	r1, #8
 80004f8:	438a      	bics	r2, r1
 80004fa:	635a      	str	r2, [r3, #52]	@ 0x34
}
 80004fc:	e014      	b.n	8000528 <GPIO_PeriClockControl+0x120>
        else if (pGPIOx == GPIOE)
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	4a0f      	ldr	r2, [pc, #60]	@ (8000540 <GPIO_PeriClockControl+0x138>)
 8000502:	4293      	cmp	r3, r2
 8000504:	d106      	bne.n	8000514 <GPIO_PeriClockControl+0x10c>
            GPIOE_PCLK_DI();
 8000506:	4b0a      	ldr	r3, [pc, #40]	@ (8000530 <GPIO_PeriClockControl+0x128>)
 8000508:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800050a:	4b09      	ldr	r3, [pc, #36]	@ (8000530 <GPIO_PeriClockControl+0x128>)
 800050c:	2110      	movs	r1, #16
 800050e:	438a      	bics	r2, r1
 8000510:	635a      	str	r2, [r3, #52]	@ 0x34
}
 8000512:	e009      	b.n	8000528 <GPIO_PeriClockControl+0x120>
        else if (pGPIOx == GPIOF)
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	4a0b      	ldr	r2, [pc, #44]	@ (8000544 <GPIO_PeriClockControl+0x13c>)
 8000518:	4293      	cmp	r3, r2
 800051a:	d105      	bne.n	8000528 <GPIO_PeriClockControl+0x120>
            GPIOF_PCLK_DI();
 800051c:	4b04      	ldr	r3, [pc, #16]	@ (8000530 <GPIO_PeriClockControl+0x128>)
 800051e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8000520:	4b03      	ldr	r3, [pc, #12]	@ (8000530 <GPIO_PeriClockControl+0x128>)
 8000522:	2120      	movs	r1, #32
 8000524:	438a      	bics	r2, r1
 8000526:	635a      	str	r2, [r3, #52]	@ 0x34
}
 8000528:	46c0      	nop			@ (mov r8, r8)
 800052a:	46bd      	mov	sp, r7
 800052c:	b002      	add	sp, #8
 800052e:	bd80      	pop	{r7, pc}
 8000530:	40021000 	.word	0x40021000
 8000534:	50000400 	.word	0x50000400
 8000538:	50000800 	.word	0x50000800
 800053c:	50000c00 	.word	0x50000c00
 8000540:	50001000 	.word	0x50001000
 8000544:	50001400 	.word	0x50001400

08000548 <GPIO_ToggleOutputPin>:
 *
 * @Note               - none
 *
 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000548:	b580      	push	{r7, lr}
 800054a:	b082      	sub	sp, #8
 800054c:	af00      	add	r7, sp, #0
 800054e:	6078      	str	r0, [r7, #4]
 8000550:	000a      	movs	r2, r1
 8000552:	1cfb      	adds	r3, r7, #3
 8000554:	701a      	strb	r2, [r3, #0]
    pGPIOx->ODR ^= (1 << PinNumber);
 8000556:	687b      	ldr	r3, [r7, #4]
 8000558:	695b      	ldr	r3, [r3, #20]
 800055a:	1cfa      	adds	r2, r7, #3
 800055c:	7812      	ldrb	r2, [r2, #0]
 800055e:	2101      	movs	r1, #1
 8000560:	4091      	lsls	r1, r2
 8000562:	000a      	movs	r2, r1
 8000564:	405a      	eors	r2, r3
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	615a      	str	r2, [r3, #20]
}
 800056a:	46c0      	nop			@ (mov r8, r8)
 800056c:	46bd      	mov	sp, r7
 800056e:	b002      	add	sp, #8
 8000570:	bd80      	pop	{r7, pc}
	...

08000574 <std>:
 8000574:	2300      	movs	r3, #0
 8000576:	b510      	push	{r4, lr}
 8000578:	0004      	movs	r4, r0
 800057a:	6003      	str	r3, [r0, #0]
 800057c:	6043      	str	r3, [r0, #4]
 800057e:	6083      	str	r3, [r0, #8]
 8000580:	8181      	strh	r1, [r0, #12]
 8000582:	6643      	str	r3, [r0, #100]	@ 0x64
 8000584:	81c2      	strh	r2, [r0, #14]
 8000586:	6103      	str	r3, [r0, #16]
 8000588:	6143      	str	r3, [r0, #20]
 800058a:	6183      	str	r3, [r0, #24]
 800058c:	0019      	movs	r1, r3
 800058e:	2208      	movs	r2, #8
 8000590:	305c      	adds	r0, #92	@ 0x5c
 8000592:	f000 f9ff 	bl	8000994 <memset>
 8000596:	4b0b      	ldr	r3, [pc, #44]	@ (80005c4 <std+0x50>)
 8000598:	6224      	str	r4, [r4, #32]
 800059a:	6263      	str	r3, [r4, #36]	@ 0x24
 800059c:	4b0a      	ldr	r3, [pc, #40]	@ (80005c8 <std+0x54>)
 800059e:	62a3      	str	r3, [r4, #40]	@ 0x28
 80005a0:	4b0a      	ldr	r3, [pc, #40]	@ (80005cc <std+0x58>)
 80005a2:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80005a4:	4b0a      	ldr	r3, [pc, #40]	@ (80005d0 <std+0x5c>)
 80005a6:	6323      	str	r3, [r4, #48]	@ 0x30
 80005a8:	4b0a      	ldr	r3, [pc, #40]	@ (80005d4 <std+0x60>)
 80005aa:	429c      	cmp	r4, r3
 80005ac:	d005      	beq.n	80005ba <std+0x46>
 80005ae:	4b0a      	ldr	r3, [pc, #40]	@ (80005d8 <std+0x64>)
 80005b0:	429c      	cmp	r4, r3
 80005b2:	d002      	beq.n	80005ba <std+0x46>
 80005b4:	4b09      	ldr	r3, [pc, #36]	@ (80005dc <std+0x68>)
 80005b6:	429c      	cmp	r4, r3
 80005b8:	d103      	bne.n	80005c2 <std+0x4e>
 80005ba:	0020      	movs	r0, r4
 80005bc:	3058      	adds	r0, #88	@ 0x58
 80005be:	f000 fa69 	bl	8000a94 <__retarget_lock_init_recursive>
 80005c2:	bd10      	pop	{r4, pc}
 80005c4:	080007bd 	.word	0x080007bd
 80005c8:	080007e5 	.word	0x080007e5
 80005cc:	0800081d 	.word	0x0800081d
 80005d0:	08000849 	.word	0x08000849
 80005d4:	20000084 	.word	0x20000084
 80005d8:	200000ec 	.word	0x200000ec
 80005dc:	20000154 	.word	0x20000154

080005e0 <stdio_exit_handler>:
 80005e0:	b510      	push	{r4, lr}
 80005e2:	4a03      	ldr	r2, [pc, #12]	@ (80005f0 <stdio_exit_handler+0x10>)
 80005e4:	4903      	ldr	r1, [pc, #12]	@ (80005f4 <stdio_exit_handler+0x14>)
 80005e6:	4804      	ldr	r0, [pc, #16]	@ (80005f8 <stdio_exit_handler+0x18>)
 80005e8:	f000 f86c 	bl	80006c4 <_fwalk_sglue>
 80005ec:	bd10      	pop	{r4, pc}
 80005ee:	46c0      	nop			@ (mov r8, r8)
 80005f0:	20000000 	.word	0x20000000
 80005f4:	08000da1 	.word	0x08000da1
 80005f8:	20000010 	.word	0x20000010

080005fc <cleanup_stdio>:
 80005fc:	6841      	ldr	r1, [r0, #4]
 80005fe:	4b0b      	ldr	r3, [pc, #44]	@ (800062c <cleanup_stdio+0x30>)
 8000600:	b510      	push	{r4, lr}
 8000602:	0004      	movs	r4, r0
 8000604:	4299      	cmp	r1, r3
 8000606:	d001      	beq.n	800060c <cleanup_stdio+0x10>
 8000608:	f000 fbca 	bl	8000da0 <_fflush_r>
 800060c:	68a1      	ldr	r1, [r4, #8]
 800060e:	4b08      	ldr	r3, [pc, #32]	@ (8000630 <cleanup_stdio+0x34>)
 8000610:	4299      	cmp	r1, r3
 8000612:	d002      	beq.n	800061a <cleanup_stdio+0x1e>
 8000614:	0020      	movs	r0, r4
 8000616:	f000 fbc3 	bl	8000da0 <_fflush_r>
 800061a:	68e1      	ldr	r1, [r4, #12]
 800061c:	4b05      	ldr	r3, [pc, #20]	@ (8000634 <cleanup_stdio+0x38>)
 800061e:	4299      	cmp	r1, r3
 8000620:	d002      	beq.n	8000628 <cleanup_stdio+0x2c>
 8000622:	0020      	movs	r0, r4
 8000624:	f000 fbbc 	bl	8000da0 <_fflush_r>
 8000628:	bd10      	pop	{r4, pc}
 800062a:	46c0      	nop			@ (mov r8, r8)
 800062c:	20000084 	.word	0x20000084
 8000630:	200000ec 	.word	0x200000ec
 8000634:	20000154 	.word	0x20000154

08000638 <global_stdio_init.part.0>:
 8000638:	b510      	push	{r4, lr}
 800063a:	4b09      	ldr	r3, [pc, #36]	@ (8000660 <global_stdio_init.part.0+0x28>)
 800063c:	4a09      	ldr	r2, [pc, #36]	@ (8000664 <global_stdio_init.part.0+0x2c>)
 800063e:	2104      	movs	r1, #4
 8000640:	601a      	str	r2, [r3, #0]
 8000642:	4809      	ldr	r0, [pc, #36]	@ (8000668 <global_stdio_init.part.0+0x30>)
 8000644:	2200      	movs	r2, #0
 8000646:	f7ff ff95 	bl	8000574 <std>
 800064a:	2201      	movs	r2, #1
 800064c:	2109      	movs	r1, #9
 800064e:	4807      	ldr	r0, [pc, #28]	@ (800066c <global_stdio_init.part.0+0x34>)
 8000650:	f7ff ff90 	bl	8000574 <std>
 8000654:	2202      	movs	r2, #2
 8000656:	2112      	movs	r1, #18
 8000658:	4805      	ldr	r0, [pc, #20]	@ (8000670 <global_stdio_init.part.0+0x38>)
 800065a:	f7ff ff8b 	bl	8000574 <std>
 800065e:	bd10      	pop	{r4, pc}
 8000660:	200001bc 	.word	0x200001bc
 8000664:	080005e1 	.word	0x080005e1
 8000668:	20000084 	.word	0x20000084
 800066c:	200000ec 	.word	0x200000ec
 8000670:	20000154 	.word	0x20000154

08000674 <__sfp_lock_acquire>:
 8000674:	b510      	push	{r4, lr}
 8000676:	4802      	ldr	r0, [pc, #8]	@ (8000680 <__sfp_lock_acquire+0xc>)
 8000678:	f000 fa0d 	bl	8000a96 <__retarget_lock_acquire_recursive>
 800067c:	bd10      	pop	{r4, pc}
 800067e:	46c0      	nop			@ (mov r8, r8)
 8000680:	200001c5 	.word	0x200001c5

08000684 <__sfp_lock_release>:
 8000684:	b510      	push	{r4, lr}
 8000686:	4802      	ldr	r0, [pc, #8]	@ (8000690 <__sfp_lock_release+0xc>)
 8000688:	f000 fa06 	bl	8000a98 <__retarget_lock_release_recursive>
 800068c:	bd10      	pop	{r4, pc}
 800068e:	46c0      	nop			@ (mov r8, r8)
 8000690:	200001c5 	.word	0x200001c5

08000694 <__sinit>:
 8000694:	b510      	push	{r4, lr}
 8000696:	0004      	movs	r4, r0
 8000698:	f7ff ffec 	bl	8000674 <__sfp_lock_acquire>
 800069c:	6a23      	ldr	r3, [r4, #32]
 800069e:	2b00      	cmp	r3, #0
 80006a0:	d002      	beq.n	80006a8 <__sinit+0x14>
 80006a2:	f7ff ffef 	bl	8000684 <__sfp_lock_release>
 80006a6:	bd10      	pop	{r4, pc}
 80006a8:	4b04      	ldr	r3, [pc, #16]	@ (80006bc <__sinit+0x28>)
 80006aa:	6223      	str	r3, [r4, #32]
 80006ac:	4b04      	ldr	r3, [pc, #16]	@ (80006c0 <__sinit+0x2c>)
 80006ae:	681b      	ldr	r3, [r3, #0]
 80006b0:	2b00      	cmp	r3, #0
 80006b2:	d1f6      	bne.n	80006a2 <__sinit+0xe>
 80006b4:	f7ff ffc0 	bl	8000638 <global_stdio_init.part.0>
 80006b8:	e7f3      	b.n	80006a2 <__sinit+0xe>
 80006ba:	46c0      	nop			@ (mov r8, r8)
 80006bc:	080005fd 	.word	0x080005fd
 80006c0:	200001bc 	.word	0x200001bc

080006c4 <_fwalk_sglue>:
 80006c4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80006c6:	0014      	movs	r4, r2
 80006c8:	2600      	movs	r6, #0
 80006ca:	9000      	str	r0, [sp, #0]
 80006cc:	9101      	str	r1, [sp, #4]
 80006ce:	68a5      	ldr	r5, [r4, #8]
 80006d0:	6867      	ldr	r7, [r4, #4]
 80006d2:	3f01      	subs	r7, #1
 80006d4:	d504      	bpl.n	80006e0 <_fwalk_sglue+0x1c>
 80006d6:	6824      	ldr	r4, [r4, #0]
 80006d8:	2c00      	cmp	r4, #0
 80006da:	d1f8      	bne.n	80006ce <_fwalk_sglue+0xa>
 80006dc:	0030      	movs	r0, r6
 80006de:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80006e0:	89ab      	ldrh	r3, [r5, #12]
 80006e2:	2b01      	cmp	r3, #1
 80006e4:	d908      	bls.n	80006f8 <_fwalk_sglue+0x34>
 80006e6:	220e      	movs	r2, #14
 80006e8:	5eab      	ldrsh	r3, [r5, r2]
 80006ea:	3301      	adds	r3, #1
 80006ec:	d004      	beq.n	80006f8 <_fwalk_sglue+0x34>
 80006ee:	0029      	movs	r1, r5
 80006f0:	9800      	ldr	r0, [sp, #0]
 80006f2:	9b01      	ldr	r3, [sp, #4]
 80006f4:	4798      	blx	r3
 80006f6:	4306      	orrs	r6, r0
 80006f8:	3568      	adds	r5, #104	@ 0x68
 80006fa:	e7ea      	b.n	80006d2 <_fwalk_sglue+0xe>

080006fc <_puts_r>:
 80006fc:	6a03      	ldr	r3, [r0, #32]
 80006fe:	b570      	push	{r4, r5, r6, lr}
 8000700:	0005      	movs	r5, r0
 8000702:	000e      	movs	r6, r1
 8000704:	6884      	ldr	r4, [r0, #8]
 8000706:	2b00      	cmp	r3, #0
 8000708:	d101      	bne.n	800070e <_puts_r+0x12>
 800070a:	f7ff ffc3 	bl	8000694 <__sinit>
 800070e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000710:	07db      	lsls	r3, r3, #31
 8000712:	d405      	bmi.n	8000720 <_puts_r+0x24>
 8000714:	89a3      	ldrh	r3, [r4, #12]
 8000716:	059b      	lsls	r3, r3, #22
 8000718:	d402      	bmi.n	8000720 <_puts_r+0x24>
 800071a:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800071c:	f000 f9bb 	bl	8000a96 <__retarget_lock_acquire_recursive>
 8000720:	89a3      	ldrh	r3, [r4, #12]
 8000722:	071b      	lsls	r3, r3, #28
 8000724:	d502      	bpl.n	800072c <_puts_r+0x30>
 8000726:	6923      	ldr	r3, [r4, #16]
 8000728:	2b00      	cmp	r3, #0
 800072a:	d11f      	bne.n	800076c <_puts_r+0x70>
 800072c:	0021      	movs	r1, r4
 800072e:	0028      	movs	r0, r5
 8000730:	f000 f8d2 	bl	80008d8 <__swsetup_r>
 8000734:	2800      	cmp	r0, #0
 8000736:	d019      	beq.n	800076c <_puts_r+0x70>
 8000738:	2501      	movs	r5, #1
 800073a:	426d      	negs	r5, r5
 800073c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800073e:	07db      	lsls	r3, r3, #31
 8000740:	d405      	bmi.n	800074e <_puts_r+0x52>
 8000742:	89a3      	ldrh	r3, [r4, #12]
 8000744:	059b      	lsls	r3, r3, #22
 8000746:	d402      	bmi.n	800074e <_puts_r+0x52>
 8000748:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800074a:	f000 f9a5 	bl	8000a98 <__retarget_lock_release_recursive>
 800074e:	0028      	movs	r0, r5
 8000750:	bd70      	pop	{r4, r5, r6, pc}
 8000752:	3601      	adds	r6, #1
 8000754:	60a3      	str	r3, [r4, #8]
 8000756:	2b00      	cmp	r3, #0
 8000758:	da04      	bge.n	8000764 <_puts_r+0x68>
 800075a:	69a2      	ldr	r2, [r4, #24]
 800075c:	429a      	cmp	r2, r3
 800075e:	dc16      	bgt.n	800078e <_puts_r+0x92>
 8000760:	290a      	cmp	r1, #10
 8000762:	d014      	beq.n	800078e <_puts_r+0x92>
 8000764:	6823      	ldr	r3, [r4, #0]
 8000766:	1c5a      	adds	r2, r3, #1
 8000768:	6022      	str	r2, [r4, #0]
 800076a:	7019      	strb	r1, [r3, #0]
 800076c:	68a3      	ldr	r3, [r4, #8]
 800076e:	7831      	ldrb	r1, [r6, #0]
 8000770:	3b01      	subs	r3, #1
 8000772:	2900      	cmp	r1, #0
 8000774:	d1ed      	bne.n	8000752 <_puts_r+0x56>
 8000776:	60a3      	str	r3, [r4, #8]
 8000778:	2b00      	cmp	r3, #0
 800077a:	da0f      	bge.n	800079c <_puts_r+0xa0>
 800077c:	0022      	movs	r2, r4
 800077e:	0028      	movs	r0, r5
 8000780:	310a      	adds	r1, #10
 8000782:	f000 f867 	bl	8000854 <__swbuf_r>
 8000786:	3001      	adds	r0, #1
 8000788:	d0d6      	beq.n	8000738 <_puts_r+0x3c>
 800078a:	250a      	movs	r5, #10
 800078c:	e7d6      	b.n	800073c <_puts_r+0x40>
 800078e:	0022      	movs	r2, r4
 8000790:	0028      	movs	r0, r5
 8000792:	f000 f85f 	bl	8000854 <__swbuf_r>
 8000796:	3001      	adds	r0, #1
 8000798:	d1e8      	bne.n	800076c <_puts_r+0x70>
 800079a:	e7cd      	b.n	8000738 <_puts_r+0x3c>
 800079c:	6823      	ldr	r3, [r4, #0]
 800079e:	1c5a      	adds	r2, r3, #1
 80007a0:	6022      	str	r2, [r4, #0]
 80007a2:	220a      	movs	r2, #10
 80007a4:	701a      	strb	r2, [r3, #0]
 80007a6:	e7f0      	b.n	800078a <_puts_r+0x8e>

080007a8 <puts>:
 80007a8:	b510      	push	{r4, lr}
 80007aa:	4b03      	ldr	r3, [pc, #12]	@ (80007b8 <puts+0x10>)
 80007ac:	0001      	movs	r1, r0
 80007ae:	6818      	ldr	r0, [r3, #0]
 80007b0:	f7ff ffa4 	bl	80006fc <_puts_r>
 80007b4:	bd10      	pop	{r4, pc}
 80007b6:	46c0      	nop			@ (mov r8, r8)
 80007b8:	2000000c 	.word	0x2000000c

080007bc <__sread>:
 80007bc:	b570      	push	{r4, r5, r6, lr}
 80007be:	000c      	movs	r4, r1
 80007c0:	250e      	movs	r5, #14
 80007c2:	5f49      	ldrsh	r1, [r1, r5]
 80007c4:	f000 f914 	bl	80009f0 <_read_r>
 80007c8:	2800      	cmp	r0, #0
 80007ca:	db03      	blt.n	80007d4 <__sread+0x18>
 80007cc:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80007ce:	181b      	adds	r3, r3, r0
 80007d0:	6563      	str	r3, [r4, #84]	@ 0x54
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	89a3      	ldrh	r3, [r4, #12]
 80007d6:	4a02      	ldr	r2, [pc, #8]	@ (80007e0 <__sread+0x24>)
 80007d8:	4013      	ands	r3, r2
 80007da:	81a3      	strh	r3, [r4, #12]
 80007dc:	e7f9      	b.n	80007d2 <__sread+0x16>
 80007de:	46c0      	nop			@ (mov r8, r8)
 80007e0:	ffffefff 	.word	0xffffefff

080007e4 <__swrite>:
 80007e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007e6:	001f      	movs	r7, r3
 80007e8:	898b      	ldrh	r3, [r1, #12]
 80007ea:	0005      	movs	r5, r0
 80007ec:	000c      	movs	r4, r1
 80007ee:	0016      	movs	r6, r2
 80007f0:	05db      	lsls	r3, r3, #23
 80007f2:	d505      	bpl.n	8000800 <__swrite+0x1c>
 80007f4:	230e      	movs	r3, #14
 80007f6:	5ec9      	ldrsh	r1, [r1, r3]
 80007f8:	2200      	movs	r2, #0
 80007fa:	2302      	movs	r3, #2
 80007fc:	f000 f8e4 	bl	80009c8 <_lseek_r>
 8000800:	89a3      	ldrh	r3, [r4, #12]
 8000802:	4a05      	ldr	r2, [pc, #20]	@ (8000818 <__swrite+0x34>)
 8000804:	0028      	movs	r0, r5
 8000806:	4013      	ands	r3, r2
 8000808:	81a3      	strh	r3, [r4, #12]
 800080a:	0032      	movs	r2, r6
 800080c:	230e      	movs	r3, #14
 800080e:	5ee1      	ldrsh	r1, [r4, r3]
 8000810:	003b      	movs	r3, r7
 8000812:	f000 f901 	bl	8000a18 <_write_r>
 8000816:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000818:	ffffefff 	.word	0xffffefff

0800081c <__sseek>:
 800081c:	b570      	push	{r4, r5, r6, lr}
 800081e:	000c      	movs	r4, r1
 8000820:	250e      	movs	r5, #14
 8000822:	5f49      	ldrsh	r1, [r1, r5]
 8000824:	f000 f8d0 	bl	80009c8 <_lseek_r>
 8000828:	89a3      	ldrh	r3, [r4, #12]
 800082a:	1c42      	adds	r2, r0, #1
 800082c:	d103      	bne.n	8000836 <__sseek+0x1a>
 800082e:	4a05      	ldr	r2, [pc, #20]	@ (8000844 <__sseek+0x28>)
 8000830:	4013      	ands	r3, r2
 8000832:	81a3      	strh	r3, [r4, #12]
 8000834:	bd70      	pop	{r4, r5, r6, pc}
 8000836:	2280      	movs	r2, #128	@ 0x80
 8000838:	0152      	lsls	r2, r2, #5
 800083a:	4313      	orrs	r3, r2
 800083c:	81a3      	strh	r3, [r4, #12]
 800083e:	6560      	str	r0, [r4, #84]	@ 0x54
 8000840:	e7f8      	b.n	8000834 <__sseek+0x18>
 8000842:	46c0      	nop			@ (mov r8, r8)
 8000844:	ffffefff 	.word	0xffffefff

08000848 <__sclose>:
 8000848:	b510      	push	{r4, lr}
 800084a:	230e      	movs	r3, #14
 800084c:	5ec9      	ldrsh	r1, [r1, r3]
 800084e:	f000 f8a9 	bl	80009a4 <_close_r>
 8000852:	bd10      	pop	{r4, pc}

08000854 <__swbuf_r>:
 8000854:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000856:	0006      	movs	r6, r0
 8000858:	000d      	movs	r5, r1
 800085a:	0014      	movs	r4, r2
 800085c:	2800      	cmp	r0, #0
 800085e:	d004      	beq.n	800086a <__swbuf_r+0x16>
 8000860:	6a03      	ldr	r3, [r0, #32]
 8000862:	2b00      	cmp	r3, #0
 8000864:	d101      	bne.n	800086a <__swbuf_r+0x16>
 8000866:	f7ff ff15 	bl	8000694 <__sinit>
 800086a:	69a3      	ldr	r3, [r4, #24]
 800086c:	60a3      	str	r3, [r4, #8]
 800086e:	89a3      	ldrh	r3, [r4, #12]
 8000870:	071b      	lsls	r3, r3, #28
 8000872:	d502      	bpl.n	800087a <__swbuf_r+0x26>
 8000874:	6923      	ldr	r3, [r4, #16]
 8000876:	2b00      	cmp	r3, #0
 8000878:	d109      	bne.n	800088e <__swbuf_r+0x3a>
 800087a:	0021      	movs	r1, r4
 800087c:	0030      	movs	r0, r6
 800087e:	f000 f82b 	bl	80008d8 <__swsetup_r>
 8000882:	2800      	cmp	r0, #0
 8000884:	d003      	beq.n	800088e <__swbuf_r+0x3a>
 8000886:	2501      	movs	r5, #1
 8000888:	426d      	negs	r5, r5
 800088a:	0028      	movs	r0, r5
 800088c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800088e:	6923      	ldr	r3, [r4, #16]
 8000890:	6820      	ldr	r0, [r4, #0]
 8000892:	b2ef      	uxtb	r7, r5
 8000894:	1ac0      	subs	r0, r0, r3
 8000896:	6963      	ldr	r3, [r4, #20]
 8000898:	b2ed      	uxtb	r5, r5
 800089a:	4283      	cmp	r3, r0
 800089c:	dc05      	bgt.n	80008aa <__swbuf_r+0x56>
 800089e:	0021      	movs	r1, r4
 80008a0:	0030      	movs	r0, r6
 80008a2:	f000 fa7d 	bl	8000da0 <_fflush_r>
 80008a6:	2800      	cmp	r0, #0
 80008a8:	d1ed      	bne.n	8000886 <__swbuf_r+0x32>
 80008aa:	68a3      	ldr	r3, [r4, #8]
 80008ac:	3001      	adds	r0, #1
 80008ae:	3b01      	subs	r3, #1
 80008b0:	60a3      	str	r3, [r4, #8]
 80008b2:	6823      	ldr	r3, [r4, #0]
 80008b4:	1c5a      	adds	r2, r3, #1
 80008b6:	6022      	str	r2, [r4, #0]
 80008b8:	701f      	strb	r7, [r3, #0]
 80008ba:	6963      	ldr	r3, [r4, #20]
 80008bc:	4283      	cmp	r3, r0
 80008be:	d004      	beq.n	80008ca <__swbuf_r+0x76>
 80008c0:	89a3      	ldrh	r3, [r4, #12]
 80008c2:	07db      	lsls	r3, r3, #31
 80008c4:	d5e1      	bpl.n	800088a <__swbuf_r+0x36>
 80008c6:	2d0a      	cmp	r5, #10
 80008c8:	d1df      	bne.n	800088a <__swbuf_r+0x36>
 80008ca:	0021      	movs	r1, r4
 80008cc:	0030      	movs	r0, r6
 80008ce:	f000 fa67 	bl	8000da0 <_fflush_r>
 80008d2:	2800      	cmp	r0, #0
 80008d4:	d0d9      	beq.n	800088a <__swbuf_r+0x36>
 80008d6:	e7d6      	b.n	8000886 <__swbuf_r+0x32>

080008d8 <__swsetup_r>:
 80008d8:	4b2d      	ldr	r3, [pc, #180]	@ (8000990 <__swsetup_r+0xb8>)
 80008da:	b570      	push	{r4, r5, r6, lr}
 80008dc:	0005      	movs	r5, r0
 80008de:	6818      	ldr	r0, [r3, #0]
 80008e0:	000c      	movs	r4, r1
 80008e2:	2800      	cmp	r0, #0
 80008e4:	d004      	beq.n	80008f0 <__swsetup_r+0x18>
 80008e6:	6a03      	ldr	r3, [r0, #32]
 80008e8:	2b00      	cmp	r3, #0
 80008ea:	d101      	bne.n	80008f0 <__swsetup_r+0x18>
 80008ec:	f7ff fed2 	bl	8000694 <__sinit>
 80008f0:	230c      	movs	r3, #12
 80008f2:	5ee2      	ldrsh	r2, [r4, r3]
 80008f4:	0713      	lsls	r3, r2, #28
 80008f6:	d423      	bmi.n	8000940 <__swsetup_r+0x68>
 80008f8:	06d3      	lsls	r3, r2, #27
 80008fa:	d407      	bmi.n	800090c <__swsetup_r+0x34>
 80008fc:	2309      	movs	r3, #9
 80008fe:	602b      	str	r3, [r5, #0]
 8000900:	2340      	movs	r3, #64	@ 0x40
 8000902:	2001      	movs	r0, #1
 8000904:	4313      	orrs	r3, r2
 8000906:	81a3      	strh	r3, [r4, #12]
 8000908:	4240      	negs	r0, r0
 800090a:	e03a      	b.n	8000982 <__swsetup_r+0xaa>
 800090c:	0752      	lsls	r2, r2, #29
 800090e:	d513      	bpl.n	8000938 <__swsetup_r+0x60>
 8000910:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000912:	2900      	cmp	r1, #0
 8000914:	d008      	beq.n	8000928 <__swsetup_r+0x50>
 8000916:	0023      	movs	r3, r4
 8000918:	3344      	adds	r3, #68	@ 0x44
 800091a:	4299      	cmp	r1, r3
 800091c:	d002      	beq.n	8000924 <__swsetup_r+0x4c>
 800091e:	0028      	movs	r0, r5
 8000920:	f000 f8bc 	bl	8000a9c <_free_r>
 8000924:	2300      	movs	r3, #0
 8000926:	6363      	str	r3, [r4, #52]	@ 0x34
 8000928:	2224      	movs	r2, #36	@ 0x24
 800092a:	89a3      	ldrh	r3, [r4, #12]
 800092c:	4393      	bics	r3, r2
 800092e:	81a3      	strh	r3, [r4, #12]
 8000930:	2300      	movs	r3, #0
 8000932:	6063      	str	r3, [r4, #4]
 8000934:	6923      	ldr	r3, [r4, #16]
 8000936:	6023      	str	r3, [r4, #0]
 8000938:	2308      	movs	r3, #8
 800093a:	89a2      	ldrh	r2, [r4, #12]
 800093c:	4313      	orrs	r3, r2
 800093e:	81a3      	strh	r3, [r4, #12]
 8000940:	6923      	ldr	r3, [r4, #16]
 8000942:	2b00      	cmp	r3, #0
 8000944:	d10b      	bne.n	800095e <__swsetup_r+0x86>
 8000946:	21a0      	movs	r1, #160	@ 0xa0
 8000948:	2280      	movs	r2, #128	@ 0x80
 800094a:	89a3      	ldrh	r3, [r4, #12]
 800094c:	0089      	lsls	r1, r1, #2
 800094e:	0092      	lsls	r2, r2, #2
 8000950:	400b      	ands	r3, r1
 8000952:	4293      	cmp	r3, r2
 8000954:	d003      	beq.n	800095e <__swsetup_r+0x86>
 8000956:	0021      	movs	r1, r4
 8000958:	0028      	movs	r0, r5
 800095a:	f000 fa77 	bl	8000e4c <__smakebuf_r>
 800095e:	230c      	movs	r3, #12
 8000960:	5ee2      	ldrsh	r2, [r4, r3]
 8000962:	2101      	movs	r1, #1
 8000964:	0013      	movs	r3, r2
 8000966:	400b      	ands	r3, r1
 8000968:	420a      	tst	r2, r1
 800096a:	d00b      	beq.n	8000984 <__swsetup_r+0xac>
 800096c:	2300      	movs	r3, #0
 800096e:	60a3      	str	r3, [r4, #8]
 8000970:	6963      	ldr	r3, [r4, #20]
 8000972:	425b      	negs	r3, r3
 8000974:	61a3      	str	r3, [r4, #24]
 8000976:	2000      	movs	r0, #0
 8000978:	6923      	ldr	r3, [r4, #16]
 800097a:	4283      	cmp	r3, r0
 800097c:	d101      	bne.n	8000982 <__swsetup_r+0xaa>
 800097e:	0613      	lsls	r3, r2, #24
 8000980:	d4be      	bmi.n	8000900 <__swsetup_r+0x28>
 8000982:	bd70      	pop	{r4, r5, r6, pc}
 8000984:	0791      	lsls	r1, r2, #30
 8000986:	d400      	bmi.n	800098a <__swsetup_r+0xb2>
 8000988:	6963      	ldr	r3, [r4, #20]
 800098a:	60a3      	str	r3, [r4, #8]
 800098c:	e7f3      	b.n	8000976 <__swsetup_r+0x9e>
 800098e:	46c0      	nop			@ (mov r8, r8)
 8000990:	2000000c 	.word	0x2000000c

08000994 <memset>:
 8000994:	0003      	movs	r3, r0
 8000996:	1882      	adds	r2, r0, r2
 8000998:	4293      	cmp	r3, r2
 800099a:	d100      	bne.n	800099e <memset+0xa>
 800099c:	4770      	bx	lr
 800099e:	7019      	strb	r1, [r3, #0]
 80009a0:	3301      	adds	r3, #1
 80009a2:	e7f9      	b.n	8000998 <memset+0x4>

080009a4 <_close_r>:
 80009a4:	2300      	movs	r3, #0
 80009a6:	b570      	push	{r4, r5, r6, lr}
 80009a8:	4d06      	ldr	r5, [pc, #24]	@ (80009c4 <_close_r+0x20>)
 80009aa:	0004      	movs	r4, r0
 80009ac:	0008      	movs	r0, r1
 80009ae:	602b      	str	r3, [r5, #0]
 80009b0:	f000 fb96 	bl	80010e0 <_close>
 80009b4:	1c43      	adds	r3, r0, #1
 80009b6:	d103      	bne.n	80009c0 <_close_r+0x1c>
 80009b8:	682b      	ldr	r3, [r5, #0]
 80009ba:	2b00      	cmp	r3, #0
 80009bc:	d000      	beq.n	80009c0 <_close_r+0x1c>
 80009be:	6023      	str	r3, [r4, #0]
 80009c0:	bd70      	pop	{r4, r5, r6, pc}
 80009c2:	46c0      	nop			@ (mov r8, r8)
 80009c4:	200001c0 	.word	0x200001c0

080009c8 <_lseek_r>:
 80009c8:	b570      	push	{r4, r5, r6, lr}
 80009ca:	0004      	movs	r4, r0
 80009cc:	0008      	movs	r0, r1
 80009ce:	0011      	movs	r1, r2
 80009d0:	001a      	movs	r2, r3
 80009d2:	2300      	movs	r3, #0
 80009d4:	4d05      	ldr	r5, [pc, #20]	@ (80009ec <_lseek_r+0x24>)
 80009d6:	602b      	str	r3, [r5, #0]
 80009d8:	f000 fb43 	bl	8001062 <_lseek>
 80009dc:	1c43      	adds	r3, r0, #1
 80009de:	d103      	bne.n	80009e8 <_lseek_r+0x20>
 80009e0:	682b      	ldr	r3, [r5, #0]
 80009e2:	2b00      	cmp	r3, #0
 80009e4:	d000      	beq.n	80009e8 <_lseek_r+0x20>
 80009e6:	6023      	str	r3, [r4, #0]
 80009e8:	bd70      	pop	{r4, r5, r6, pc}
 80009ea:	46c0      	nop			@ (mov r8, r8)
 80009ec:	200001c0 	.word	0x200001c0

080009f0 <_read_r>:
 80009f0:	b570      	push	{r4, r5, r6, lr}
 80009f2:	0004      	movs	r4, r0
 80009f4:	0008      	movs	r0, r1
 80009f6:	0011      	movs	r1, r2
 80009f8:	001a      	movs	r2, r3
 80009fa:	2300      	movs	r3, #0
 80009fc:	4d05      	ldr	r5, [pc, #20]	@ (8000a14 <_read_r+0x24>)
 80009fe:	602b      	str	r3, [r5, #0]
 8000a00:	f000 fada 	bl	8000fb8 <_read>
 8000a04:	1c43      	adds	r3, r0, #1
 8000a06:	d103      	bne.n	8000a10 <_read_r+0x20>
 8000a08:	682b      	ldr	r3, [r5, #0]
 8000a0a:	2b00      	cmp	r3, #0
 8000a0c:	d000      	beq.n	8000a10 <_read_r+0x20>
 8000a0e:	6023      	str	r3, [r4, #0]
 8000a10:	bd70      	pop	{r4, r5, r6, pc}
 8000a12:	46c0      	nop			@ (mov r8, r8)
 8000a14:	200001c0 	.word	0x200001c0

08000a18 <_write_r>:
 8000a18:	b570      	push	{r4, r5, r6, lr}
 8000a1a:	0004      	movs	r4, r0
 8000a1c:	0008      	movs	r0, r1
 8000a1e:	0011      	movs	r1, r2
 8000a20:	001a      	movs	r2, r3
 8000a22:	2300      	movs	r3, #0
 8000a24:	4d05      	ldr	r5, [pc, #20]	@ (8000a3c <_write_r+0x24>)
 8000a26:	602b      	str	r3, [r5, #0]
 8000a28:	f000 fb2f 	bl	800108a <_write>
 8000a2c:	1c43      	adds	r3, r0, #1
 8000a2e:	d103      	bne.n	8000a38 <_write_r+0x20>
 8000a30:	682b      	ldr	r3, [r5, #0]
 8000a32:	2b00      	cmp	r3, #0
 8000a34:	d000      	beq.n	8000a38 <_write_r+0x20>
 8000a36:	6023      	str	r3, [r4, #0]
 8000a38:	bd70      	pop	{r4, r5, r6, pc}
 8000a3a:	46c0      	nop			@ (mov r8, r8)
 8000a3c:	200001c0 	.word	0x200001c0

08000a40 <__errno>:
 8000a40:	4b01      	ldr	r3, [pc, #4]	@ (8000a48 <__errno+0x8>)
 8000a42:	6818      	ldr	r0, [r3, #0]
 8000a44:	4770      	bx	lr
 8000a46:	46c0      	nop			@ (mov r8, r8)
 8000a48:	2000000c 	.word	0x2000000c

08000a4c <__libc_init_array>:
 8000a4c:	b570      	push	{r4, r5, r6, lr}
 8000a4e:	2600      	movs	r6, #0
 8000a50:	4c0c      	ldr	r4, [pc, #48]	@ (8000a84 <__libc_init_array+0x38>)
 8000a52:	4d0d      	ldr	r5, [pc, #52]	@ (8000a88 <__libc_init_array+0x3c>)
 8000a54:	1b64      	subs	r4, r4, r5
 8000a56:	10a4      	asrs	r4, r4, #2
 8000a58:	42a6      	cmp	r6, r4
 8000a5a:	d109      	bne.n	8000a70 <__libc_init_array+0x24>
 8000a5c:	2600      	movs	r6, #0
 8000a5e:	f000 fcff 	bl	8001460 <_init>
 8000a62:	4c0a      	ldr	r4, [pc, #40]	@ (8000a8c <__libc_init_array+0x40>)
 8000a64:	4d0a      	ldr	r5, [pc, #40]	@ (8000a90 <__libc_init_array+0x44>)
 8000a66:	1b64      	subs	r4, r4, r5
 8000a68:	10a4      	asrs	r4, r4, #2
 8000a6a:	42a6      	cmp	r6, r4
 8000a6c:	d105      	bne.n	8000a7a <__libc_init_array+0x2e>
 8000a6e:	bd70      	pop	{r4, r5, r6, pc}
 8000a70:	00b3      	lsls	r3, r6, #2
 8000a72:	58eb      	ldr	r3, [r5, r3]
 8000a74:	4798      	blx	r3
 8000a76:	3601      	adds	r6, #1
 8000a78:	e7ee      	b.n	8000a58 <__libc_init_array+0xc>
 8000a7a:	00b3      	lsls	r3, r6, #2
 8000a7c:	58eb      	ldr	r3, [r5, r3]
 8000a7e:	4798      	blx	r3
 8000a80:	3601      	adds	r6, #1
 8000a82:	e7f2      	b.n	8000a6a <__libc_init_array+0x1e>
 8000a84:	080014a0 	.word	0x080014a0
 8000a88:	080014a0 	.word	0x080014a0
 8000a8c:	080014a4 	.word	0x080014a4
 8000a90:	080014a0 	.word	0x080014a0

08000a94 <__retarget_lock_init_recursive>:
 8000a94:	4770      	bx	lr

08000a96 <__retarget_lock_acquire_recursive>:
 8000a96:	4770      	bx	lr

08000a98 <__retarget_lock_release_recursive>:
 8000a98:	4770      	bx	lr
	...

08000a9c <_free_r>:
 8000a9c:	b570      	push	{r4, r5, r6, lr}
 8000a9e:	0005      	movs	r5, r0
 8000aa0:	1e0c      	subs	r4, r1, #0
 8000aa2:	d010      	beq.n	8000ac6 <_free_r+0x2a>
 8000aa4:	3c04      	subs	r4, #4
 8000aa6:	6823      	ldr	r3, [r4, #0]
 8000aa8:	2b00      	cmp	r3, #0
 8000aaa:	da00      	bge.n	8000aae <_free_r+0x12>
 8000aac:	18e4      	adds	r4, r4, r3
 8000aae:	0028      	movs	r0, r5
 8000ab0:	f000 f8e0 	bl	8000c74 <__malloc_lock>
 8000ab4:	4a1d      	ldr	r2, [pc, #116]	@ (8000b2c <_free_r+0x90>)
 8000ab6:	6813      	ldr	r3, [r2, #0]
 8000ab8:	2b00      	cmp	r3, #0
 8000aba:	d105      	bne.n	8000ac8 <_free_r+0x2c>
 8000abc:	6063      	str	r3, [r4, #4]
 8000abe:	6014      	str	r4, [r2, #0]
 8000ac0:	0028      	movs	r0, r5
 8000ac2:	f000 f8df 	bl	8000c84 <__malloc_unlock>
 8000ac6:	bd70      	pop	{r4, r5, r6, pc}
 8000ac8:	42a3      	cmp	r3, r4
 8000aca:	d908      	bls.n	8000ade <_free_r+0x42>
 8000acc:	6820      	ldr	r0, [r4, #0]
 8000ace:	1821      	adds	r1, r4, r0
 8000ad0:	428b      	cmp	r3, r1
 8000ad2:	d1f3      	bne.n	8000abc <_free_r+0x20>
 8000ad4:	6819      	ldr	r1, [r3, #0]
 8000ad6:	685b      	ldr	r3, [r3, #4]
 8000ad8:	1809      	adds	r1, r1, r0
 8000ada:	6021      	str	r1, [r4, #0]
 8000adc:	e7ee      	b.n	8000abc <_free_r+0x20>
 8000ade:	001a      	movs	r2, r3
 8000ae0:	685b      	ldr	r3, [r3, #4]
 8000ae2:	2b00      	cmp	r3, #0
 8000ae4:	d001      	beq.n	8000aea <_free_r+0x4e>
 8000ae6:	42a3      	cmp	r3, r4
 8000ae8:	d9f9      	bls.n	8000ade <_free_r+0x42>
 8000aea:	6811      	ldr	r1, [r2, #0]
 8000aec:	1850      	adds	r0, r2, r1
 8000aee:	42a0      	cmp	r0, r4
 8000af0:	d10b      	bne.n	8000b0a <_free_r+0x6e>
 8000af2:	6820      	ldr	r0, [r4, #0]
 8000af4:	1809      	adds	r1, r1, r0
 8000af6:	1850      	adds	r0, r2, r1
 8000af8:	6011      	str	r1, [r2, #0]
 8000afa:	4283      	cmp	r3, r0
 8000afc:	d1e0      	bne.n	8000ac0 <_free_r+0x24>
 8000afe:	6818      	ldr	r0, [r3, #0]
 8000b00:	685b      	ldr	r3, [r3, #4]
 8000b02:	1841      	adds	r1, r0, r1
 8000b04:	6011      	str	r1, [r2, #0]
 8000b06:	6053      	str	r3, [r2, #4]
 8000b08:	e7da      	b.n	8000ac0 <_free_r+0x24>
 8000b0a:	42a0      	cmp	r0, r4
 8000b0c:	d902      	bls.n	8000b14 <_free_r+0x78>
 8000b0e:	230c      	movs	r3, #12
 8000b10:	602b      	str	r3, [r5, #0]
 8000b12:	e7d5      	b.n	8000ac0 <_free_r+0x24>
 8000b14:	6820      	ldr	r0, [r4, #0]
 8000b16:	1821      	adds	r1, r4, r0
 8000b18:	428b      	cmp	r3, r1
 8000b1a:	d103      	bne.n	8000b24 <_free_r+0x88>
 8000b1c:	6819      	ldr	r1, [r3, #0]
 8000b1e:	685b      	ldr	r3, [r3, #4]
 8000b20:	1809      	adds	r1, r1, r0
 8000b22:	6021      	str	r1, [r4, #0]
 8000b24:	6063      	str	r3, [r4, #4]
 8000b26:	6054      	str	r4, [r2, #4]
 8000b28:	e7ca      	b.n	8000ac0 <_free_r+0x24>
 8000b2a:	46c0      	nop			@ (mov r8, r8)
 8000b2c:	200001cc 	.word	0x200001cc

08000b30 <sbrk_aligned>:
 8000b30:	b570      	push	{r4, r5, r6, lr}
 8000b32:	4e0f      	ldr	r6, [pc, #60]	@ (8000b70 <sbrk_aligned+0x40>)
 8000b34:	000d      	movs	r5, r1
 8000b36:	6831      	ldr	r1, [r6, #0]
 8000b38:	0004      	movs	r4, r0
 8000b3a:	2900      	cmp	r1, #0
 8000b3c:	d102      	bne.n	8000b44 <sbrk_aligned+0x14>
 8000b3e:	f000 f9eb 	bl	8000f18 <_sbrk_r>
 8000b42:	6030      	str	r0, [r6, #0]
 8000b44:	0029      	movs	r1, r5
 8000b46:	0020      	movs	r0, r4
 8000b48:	f000 f9e6 	bl	8000f18 <_sbrk_r>
 8000b4c:	1c43      	adds	r3, r0, #1
 8000b4e:	d103      	bne.n	8000b58 <sbrk_aligned+0x28>
 8000b50:	2501      	movs	r5, #1
 8000b52:	426d      	negs	r5, r5
 8000b54:	0028      	movs	r0, r5
 8000b56:	bd70      	pop	{r4, r5, r6, pc}
 8000b58:	2303      	movs	r3, #3
 8000b5a:	1cc5      	adds	r5, r0, #3
 8000b5c:	439d      	bics	r5, r3
 8000b5e:	42a8      	cmp	r0, r5
 8000b60:	d0f8      	beq.n	8000b54 <sbrk_aligned+0x24>
 8000b62:	1a29      	subs	r1, r5, r0
 8000b64:	0020      	movs	r0, r4
 8000b66:	f000 f9d7 	bl	8000f18 <_sbrk_r>
 8000b6a:	3001      	adds	r0, #1
 8000b6c:	d1f2      	bne.n	8000b54 <sbrk_aligned+0x24>
 8000b6e:	e7ef      	b.n	8000b50 <sbrk_aligned+0x20>
 8000b70:	200001c8 	.word	0x200001c8

08000b74 <_malloc_r>:
 8000b74:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000b76:	2203      	movs	r2, #3
 8000b78:	1ccb      	adds	r3, r1, #3
 8000b7a:	4393      	bics	r3, r2
 8000b7c:	3308      	adds	r3, #8
 8000b7e:	0005      	movs	r5, r0
 8000b80:	001f      	movs	r7, r3
 8000b82:	2b0c      	cmp	r3, #12
 8000b84:	d234      	bcs.n	8000bf0 <_malloc_r+0x7c>
 8000b86:	270c      	movs	r7, #12
 8000b88:	42b9      	cmp	r1, r7
 8000b8a:	d833      	bhi.n	8000bf4 <_malloc_r+0x80>
 8000b8c:	0028      	movs	r0, r5
 8000b8e:	f000 f871 	bl	8000c74 <__malloc_lock>
 8000b92:	4e37      	ldr	r6, [pc, #220]	@ (8000c70 <_malloc_r+0xfc>)
 8000b94:	6833      	ldr	r3, [r6, #0]
 8000b96:	001c      	movs	r4, r3
 8000b98:	2c00      	cmp	r4, #0
 8000b9a:	d12f      	bne.n	8000bfc <_malloc_r+0x88>
 8000b9c:	0039      	movs	r1, r7
 8000b9e:	0028      	movs	r0, r5
 8000ba0:	f7ff ffc6 	bl	8000b30 <sbrk_aligned>
 8000ba4:	0004      	movs	r4, r0
 8000ba6:	1c43      	adds	r3, r0, #1
 8000ba8:	d15f      	bne.n	8000c6a <_malloc_r+0xf6>
 8000baa:	6834      	ldr	r4, [r6, #0]
 8000bac:	9400      	str	r4, [sp, #0]
 8000bae:	9b00      	ldr	r3, [sp, #0]
 8000bb0:	2b00      	cmp	r3, #0
 8000bb2:	d14a      	bne.n	8000c4a <_malloc_r+0xd6>
 8000bb4:	2c00      	cmp	r4, #0
 8000bb6:	d052      	beq.n	8000c5e <_malloc_r+0xea>
 8000bb8:	6823      	ldr	r3, [r4, #0]
 8000bba:	0028      	movs	r0, r5
 8000bbc:	18e3      	adds	r3, r4, r3
 8000bbe:	9900      	ldr	r1, [sp, #0]
 8000bc0:	9301      	str	r3, [sp, #4]
 8000bc2:	f000 f9a9 	bl	8000f18 <_sbrk_r>
 8000bc6:	9b01      	ldr	r3, [sp, #4]
 8000bc8:	4283      	cmp	r3, r0
 8000bca:	d148      	bne.n	8000c5e <_malloc_r+0xea>
 8000bcc:	6823      	ldr	r3, [r4, #0]
 8000bce:	0028      	movs	r0, r5
 8000bd0:	1aff      	subs	r7, r7, r3
 8000bd2:	0039      	movs	r1, r7
 8000bd4:	f7ff ffac 	bl	8000b30 <sbrk_aligned>
 8000bd8:	3001      	adds	r0, #1
 8000bda:	d040      	beq.n	8000c5e <_malloc_r+0xea>
 8000bdc:	6823      	ldr	r3, [r4, #0]
 8000bde:	19db      	adds	r3, r3, r7
 8000be0:	6023      	str	r3, [r4, #0]
 8000be2:	6833      	ldr	r3, [r6, #0]
 8000be4:	685a      	ldr	r2, [r3, #4]
 8000be6:	2a00      	cmp	r2, #0
 8000be8:	d133      	bne.n	8000c52 <_malloc_r+0xde>
 8000bea:	9b00      	ldr	r3, [sp, #0]
 8000bec:	6033      	str	r3, [r6, #0]
 8000bee:	e019      	b.n	8000c24 <_malloc_r+0xb0>
 8000bf0:	2b00      	cmp	r3, #0
 8000bf2:	dac9      	bge.n	8000b88 <_malloc_r+0x14>
 8000bf4:	230c      	movs	r3, #12
 8000bf6:	602b      	str	r3, [r5, #0]
 8000bf8:	2000      	movs	r0, #0
 8000bfa:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000bfc:	6821      	ldr	r1, [r4, #0]
 8000bfe:	1bc9      	subs	r1, r1, r7
 8000c00:	d420      	bmi.n	8000c44 <_malloc_r+0xd0>
 8000c02:	290b      	cmp	r1, #11
 8000c04:	d90a      	bls.n	8000c1c <_malloc_r+0xa8>
 8000c06:	19e2      	adds	r2, r4, r7
 8000c08:	6027      	str	r7, [r4, #0]
 8000c0a:	42a3      	cmp	r3, r4
 8000c0c:	d104      	bne.n	8000c18 <_malloc_r+0xa4>
 8000c0e:	6032      	str	r2, [r6, #0]
 8000c10:	6863      	ldr	r3, [r4, #4]
 8000c12:	6011      	str	r1, [r2, #0]
 8000c14:	6053      	str	r3, [r2, #4]
 8000c16:	e005      	b.n	8000c24 <_malloc_r+0xb0>
 8000c18:	605a      	str	r2, [r3, #4]
 8000c1a:	e7f9      	b.n	8000c10 <_malloc_r+0x9c>
 8000c1c:	6862      	ldr	r2, [r4, #4]
 8000c1e:	42a3      	cmp	r3, r4
 8000c20:	d10e      	bne.n	8000c40 <_malloc_r+0xcc>
 8000c22:	6032      	str	r2, [r6, #0]
 8000c24:	0028      	movs	r0, r5
 8000c26:	f000 f82d 	bl	8000c84 <__malloc_unlock>
 8000c2a:	0020      	movs	r0, r4
 8000c2c:	2207      	movs	r2, #7
 8000c2e:	300b      	adds	r0, #11
 8000c30:	1d23      	adds	r3, r4, #4
 8000c32:	4390      	bics	r0, r2
 8000c34:	1ac2      	subs	r2, r0, r3
 8000c36:	4298      	cmp	r0, r3
 8000c38:	d0df      	beq.n	8000bfa <_malloc_r+0x86>
 8000c3a:	1a1b      	subs	r3, r3, r0
 8000c3c:	50a3      	str	r3, [r4, r2]
 8000c3e:	e7dc      	b.n	8000bfa <_malloc_r+0x86>
 8000c40:	605a      	str	r2, [r3, #4]
 8000c42:	e7ef      	b.n	8000c24 <_malloc_r+0xb0>
 8000c44:	0023      	movs	r3, r4
 8000c46:	6864      	ldr	r4, [r4, #4]
 8000c48:	e7a6      	b.n	8000b98 <_malloc_r+0x24>
 8000c4a:	9c00      	ldr	r4, [sp, #0]
 8000c4c:	6863      	ldr	r3, [r4, #4]
 8000c4e:	9300      	str	r3, [sp, #0]
 8000c50:	e7ad      	b.n	8000bae <_malloc_r+0x3a>
 8000c52:	001a      	movs	r2, r3
 8000c54:	685b      	ldr	r3, [r3, #4]
 8000c56:	42a3      	cmp	r3, r4
 8000c58:	d1fb      	bne.n	8000c52 <_malloc_r+0xde>
 8000c5a:	2300      	movs	r3, #0
 8000c5c:	e7da      	b.n	8000c14 <_malloc_r+0xa0>
 8000c5e:	230c      	movs	r3, #12
 8000c60:	0028      	movs	r0, r5
 8000c62:	602b      	str	r3, [r5, #0]
 8000c64:	f000 f80e 	bl	8000c84 <__malloc_unlock>
 8000c68:	e7c6      	b.n	8000bf8 <_malloc_r+0x84>
 8000c6a:	6007      	str	r7, [r0, #0]
 8000c6c:	e7da      	b.n	8000c24 <_malloc_r+0xb0>
 8000c6e:	46c0      	nop			@ (mov r8, r8)
 8000c70:	200001cc 	.word	0x200001cc

08000c74 <__malloc_lock>:
 8000c74:	b510      	push	{r4, lr}
 8000c76:	4802      	ldr	r0, [pc, #8]	@ (8000c80 <__malloc_lock+0xc>)
 8000c78:	f7ff ff0d 	bl	8000a96 <__retarget_lock_acquire_recursive>
 8000c7c:	bd10      	pop	{r4, pc}
 8000c7e:	46c0      	nop			@ (mov r8, r8)
 8000c80:	200001c4 	.word	0x200001c4

08000c84 <__malloc_unlock>:
 8000c84:	b510      	push	{r4, lr}
 8000c86:	4802      	ldr	r0, [pc, #8]	@ (8000c90 <__malloc_unlock+0xc>)
 8000c88:	f7ff ff06 	bl	8000a98 <__retarget_lock_release_recursive>
 8000c8c:	bd10      	pop	{r4, pc}
 8000c8e:	46c0      	nop			@ (mov r8, r8)
 8000c90:	200001c4 	.word	0x200001c4

08000c94 <__sflush_r>:
 8000c94:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000c96:	220c      	movs	r2, #12
 8000c98:	5e8b      	ldrsh	r3, [r1, r2]
 8000c9a:	0005      	movs	r5, r0
 8000c9c:	000c      	movs	r4, r1
 8000c9e:	071a      	lsls	r2, r3, #28
 8000ca0:	d456      	bmi.n	8000d50 <__sflush_r+0xbc>
 8000ca2:	684a      	ldr	r2, [r1, #4]
 8000ca4:	2a00      	cmp	r2, #0
 8000ca6:	dc02      	bgt.n	8000cae <__sflush_r+0x1a>
 8000ca8:	6c0a      	ldr	r2, [r1, #64]	@ 0x40
 8000caa:	2a00      	cmp	r2, #0
 8000cac:	dd4e      	ble.n	8000d4c <__sflush_r+0xb8>
 8000cae:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8000cb0:	2f00      	cmp	r7, #0
 8000cb2:	d04b      	beq.n	8000d4c <__sflush_r+0xb8>
 8000cb4:	2200      	movs	r2, #0
 8000cb6:	2080      	movs	r0, #128	@ 0x80
 8000cb8:	682e      	ldr	r6, [r5, #0]
 8000cba:	602a      	str	r2, [r5, #0]
 8000cbc:	001a      	movs	r2, r3
 8000cbe:	0140      	lsls	r0, r0, #5
 8000cc0:	6a21      	ldr	r1, [r4, #32]
 8000cc2:	4002      	ands	r2, r0
 8000cc4:	4203      	tst	r3, r0
 8000cc6:	d033      	beq.n	8000d30 <__sflush_r+0x9c>
 8000cc8:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000cca:	89a3      	ldrh	r3, [r4, #12]
 8000ccc:	075b      	lsls	r3, r3, #29
 8000cce:	d506      	bpl.n	8000cde <__sflush_r+0x4a>
 8000cd0:	6863      	ldr	r3, [r4, #4]
 8000cd2:	1ad2      	subs	r2, r2, r3
 8000cd4:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000cd6:	2b00      	cmp	r3, #0
 8000cd8:	d001      	beq.n	8000cde <__sflush_r+0x4a>
 8000cda:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000cdc:	1ad2      	subs	r2, r2, r3
 8000cde:	2300      	movs	r3, #0
 8000ce0:	0028      	movs	r0, r5
 8000ce2:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8000ce4:	6a21      	ldr	r1, [r4, #32]
 8000ce6:	47b8      	blx	r7
 8000ce8:	89a2      	ldrh	r2, [r4, #12]
 8000cea:	1c43      	adds	r3, r0, #1
 8000cec:	d106      	bne.n	8000cfc <__sflush_r+0x68>
 8000cee:	6829      	ldr	r1, [r5, #0]
 8000cf0:	291d      	cmp	r1, #29
 8000cf2:	d846      	bhi.n	8000d82 <__sflush_r+0xee>
 8000cf4:	4b29      	ldr	r3, [pc, #164]	@ (8000d9c <__sflush_r+0x108>)
 8000cf6:	410b      	asrs	r3, r1
 8000cf8:	07db      	lsls	r3, r3, #31
 8000cfa:	d442      	bmi.n	8000d82 <__sflush_r+0xee>
 8000cfc:	2300      	movs	r3, #0
 8000cfe:	6063      	str	r3, [r4, #4]
 8000d00:	6923      	ldr	r3, [r4, #16]
 8000d02:	6023      	str	r3, [r4, #0]
 8000d04:	04d2      	lsls	r2, r2, #19
 8000d06:	d505      	bpl.n	8000d14 <__sflush_r+0x80>
 8000d08:	1c43      	adds	r3, r0, #1
 8000d0a:	d102      	bne.n	8000d12 <__sflush_r+0x7e>
 8000d0c:	682b      	ldr	r3, [r5, #0]
 8000d0e:	2b00      	cmp	r3, #0
 8000d10:	d100      	bne.n	8000d14 <__sflush_r+0x80>
 8000d12:	6560      	str	r0, [r4, #84]	@ 0x54
 8000d14:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000d16:	602e      	str	r6, [r5, #0]
 8000d18:	2900      	cmp	r1, #0
 8000d1a:	d017      	beq.n	8000d4c <__sflush_r+0xb8>
 8000d1c:	0023      	movs	r3, r4
 8000d1e:	3344      	adds	r3, #68	@ 0x44
 8000d20:	4299      	cmp	r1, r3
 8000d22:	d002      	beq.n	8000d2a <__sflush_r+0x96>
 8000d24:	0028      	movs	r0, r5
 8000d26:	f7ff feb9 	bl	8000a9c <_free_r>
 8000d2a:	2300      	movs	r3, #0
 8000d2c:	6363      	str	r3, [r4, #52]	@ 0x34
 8000d2e:	e00d      	b.n	8000d4c <__sflush_r+0xb8>
 8000d30:	2301      	movs	r3, #1
 8000d32:	0028      	movs	r0, r5
 8000d34:	47b8      	blx	r7
 8000d36:	0002      	movs	r2, r0
 8000d38:	1c43      	adds	r3, r0, #1
 8000d3a:	d1c6      	bne.n	8000cca <__sflush_r+0x36>
 8000d3c:	682b      	ldr	r3, [r5, #0]
 8000d3e:	2b00      	cmp	r3, #0
 8000d40:	d0c3      	beq.n	8000cca <__sflush_r+0x36>
 8000d42:	2b1d      	cmp	r3, #29
 8000d44:	d001      	beq.n	8000d4a <__sflush_r+0xb6>
 8000d46:	2b16      	cmp	r3, #22
 8000d48:	d11a      	bne.n	8000d80 <__sflush_r+0xec>
 8000d4a:	602e      	str	r6, [r5, #0]
 8000d4c:	2000      	movs	r0, #0
 8000d4e:	e01e      	b.n	8000d8e <__sflush_r+0xfa>
 8000d50:	690e      	ldr	r6, [r1, #16]
 8000d52:	2e00      	cmp	r6, #0
 8000d54:	d0fa      	beq.n	8000d4c <__sflush_r+0xb8>
 8000d56:	680f      	ldr	r7, [r1, #0]
 8000d58:	600e      	str	r6, [r1, #0]
 8000d5a:	1bba      	subs	r2, r7, r6
 8000d5c:	9201      	str	r2, [sp, #4]
 8000d5e:	2200      	movs	r2, #0
 8000d60:	079b      	lsls	r3, r3, #30
 8000d62:	d100      	bne.n	8000d66 <__sflush_r+0xd2>
 8000d64:	694a      	ldr	r2, [r1, #20]
 8000d66:	60a2      	str	r2, [r4, #8]
 8000d68:	9b01      	ldr	r3, [sp, #4]
 8000d6a:	2b00      	cmp	r3, #0
 8000d6c:	ddee      	ble.n	8000d4c <__sflush_r+0xb8>
 8000d6e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8000d70:	0032      	movs	r2, r6
 8000d72:	001f      	movs	r7, r3
 8000d74:	0028      	movs	r0, r5
 8000d76:	9b01      	ldr	r3, [sp, #4]
 8000d78:	6a21      	ldr	r1, [r4, #32]
 8000d7a:	47b8      	blx	r7
 8000d7c:	2800      	cmp	r0, #0
 8000d7e:	dc07      	bgt.n	8000d90 <__sflush_r+0xfc>
 8000d80:	89a2      	ldrh	r2, [r4, #12]
 8000d82:	2340      	movs	r3, #64	@ 0x40
 8000d84:	2001      	movs	r0, #1
 8000d86:	4313      	orrs	r3, r2
 8000d88:	b21b      	sxth	r3, r3
 8000d8a:	81a3      	strh	r3, [r4, #12]
 8000d8c:	4240      	negs	r0, r0
 8000d8e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000d90:	9b01      	ldr	r3, [sp, #4]
 8000d92:	1836      	adds	r6, r6, r0
 8000d94:	1a1b      	subs	r3, r3, r0
 8000d96:	9301      	str	r3, [sp, #4]
 8000d98:	e7e6      	b.n	8000d68 <__sflush_r+0xd4>
 8000d9a:	46c0      	nop			@ (mov r8, r8)
 8000d9c:	dfbffffe 	.word	0xdfbffffe

08000da0 <_fflush_r>:
 8000da0:	690b      	ldr	r3, [r1, #16]
 8000da2:	b570      	push	{r4, r5, r6, lr}
 8000da4:	0005      	movs	r5, r0
 8000da6:	000c      	movs	r4, r1
 8000da8:	2b00      	cmp	r3, #0
 8000daa:	d102      	bne.n	8000db2 <_fflush_r+0x12>
 8000dac:	2500      	movs	r5, #0
 8000dae:	0028      	movs	r0, r5
 8000db0:	bd70      	pop	{r4, r5, r6, pc}
 8000db2:	2800      	cmp	r0, #0
 8000db4:	d004      	beq.n	8000dc0 <_fflush_r+0x20>
 8000db6:	6a03      	ldr	r3, [r0, #32]
 8000db8:	2b00      	cmp	r3, #0
 8000dba:	d101      	bne.n	8000dc0 <_fflush_r+0x20>
 8000dbc:	f7ff fc6a 	bl	8000694 <__sinit>
 8000dc0:	220c      	movs	r2, #12
 8000dc2:	5ea3      	ldrsh	r3, [r4, r2]
 8000dc4:	2b00      	cmp	r3, #0
 8000dc6:	d0f1      	beq.n	8000dac <_fflush_r+0xc>
 8000dc8:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8000dca:	07d2      	lsls	r2, r2, #31
 8000dcc:	d404      	bmi.n	8000dd8 <_fflush_r+0x38>
 8000dce:	059b      	lsls	r3, r3, #22
 8000dd0:	d402      	bmi.n	8000dd8 <_fflush_r+0x38>
 8000dd2:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000dd4:	f7ff fe5f 	bl	8000a96 <__retarget_lock_acquire_recursive>
 8000dd8:	0028      	movs	r0, r5
 8000dda:	0021      	movs	r1, r4
 8000ddc:	f7ff ff5a 	bl	8000c94 <__sflush_r>
 8000de0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000de2:	0005      	movs	r5, r0
 8000de4:	07db      	lsls	r3, r3, #31
 8000de6:	d4e2      	bmi.n	8000dae <_fflush_r+0xe>
 8000de8:	89a3      	ldrh	r3, [r4, #12]
 8000dea:	059b      	lsls	r3, r3, #22
 8000dec:	d4df      	bmi.n	8000dae <_fflush_r+0xe>
 8000dee:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000df0:	f7ff fe52 	bl	8000a98 <__retarget_lock_release_recursive>
 8000df4:	e7db      	b.n	8000dae <_fflush_r+0xe>
	...

08000df8 <__swhatbuf_r>:
 8000df8:	b570      	push	{r4, r5, r6, lr}
 8000dfa:	000e      	movs	r6, r1
 8000dfc:	001d      	movs	r5, r3
 8000dfe:	230e      	movs	r3, #14
 8000e00:	5ec9      	ldrsh	r1, [r1, r3]
 8000e02:	0014      	movs	r4, r2
 8000e04:	b096      	sub	sp, #88	@ 0x58
 8000e06:	2900      	cmp	r1, #0
 8000e08:	da0c      	bge.n	8000e24 <__swhatbuf_r+0x2c>
 8000e0a:	89b2      	ldrh	r2, [r6, #12]
 8000e0c:	2380      	movs	r3, #128	@ 0x80
 8000e0e:	0011      	movs	r1, r2
 8000e10:	4019      	ands	r1, r3
 8000e12:	421a      	tst	r2, r3
 8000e14:	d114      	bne.n	8000e40 <__swhatbuf_r+0x48>
 8000e16:	2380      	movs	r3, #128	@ 0x80
 8000e18:	00db      	lsls	r3, r3, #3
 8000e1a:	2000      	movs	r0, #0
 8000e1c:	6029      	str	r1, [r5, #0]
 8000e1e:	6023      	str	r3, [r4, #0]
 8000e20:	b016      	add	sp, #88	@ 0x58
 8000e22:	bd70      	pop	{r4, r5, r6, pc}
 8000e24:	466a      	mov	r2, sp
 8000e26:	f000 f853 	bl	8000ed0 <_fstat_r>
 8000e2a:	2800      	cmp	r0, #0
 8000e2c:	dbed      	blt.n	8000e0a <__swhatbuf_r+0x12>
 8000e2e:	23f0      	movs	r3, #240	@ 0xf0
 8000e30:	9901      	ldr	r1, [sp, #4]
 8000e32:	021b      	lsls	r3, r3, #8
 8000e34:	4019      	ands	r1, r3
 8000e36:	4b04      	ldr	r3, [pc, #16]	@ (8000e48 <__swhatbuf_r+0x50>)
 8000e38:	18c9      	adds	r1, r1, r3
 8000e3a:	424b      	negs	r3, r1
 8000e3c:	4159      	adcs	r1, r3
 8000e3e:	e7ea      	b.n	8000e16 <__swhatbuf_r+0x1e>
 8000e40:	2100      	movs	r1, #0
 8000e42:	2340      	movs	r3, #64	@ 0x40
 8000e44:	e7e9      	b.n	8000e1a <__swhatbuf_r+0x22>
 8000e46:	46c0      	nop			@ (mov r8, r8)
 8000e48:	ffffe000 	.word	0xffffe000

08000e4c <__smakebuf_r>:
 8000e4c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e4e:	2602      	movs	r6, #2
 8000e50:	898b      	ldrh	r3, [r1, #12]
 8000e52:	0005      	movs	r5, r0
 8000e54:	000c      	movs	r4, r1
 8000e56:	b085      	sub	sp, #20
 8000e58:	4233      	tst	r3, r6
 8000e5a:	d007      	beq.n	8000e6c <__smakebuf_r+0x20>
 8000e5c:	0023      	movs	r3, r4
 8000e5e:	3347      	adds	r3, #71	@ 0x47
 8000e60:	6023      	str	r3, [r4, #0]
 8000e62:	6123      	str	r3, [r4, #16]
 8000e64:	2301      	movs	r3, #1
 8000e66:	6163      	str	r3, [r4, #20]
 8000e68:	b005      	add	sp, #20
 8000e6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000e6c:	ab03      	add	r3, sp, #12
 8000e6e:	aa02      	add	r2, sp, #8
 8000e70:	f7ff ffc2 	bl	8000df8 <__swhatbuf_r>
 8000e74:	9f02      	ldr	r7, [sp, #8]
 8000e76:	9001      	str	r0, [sp, #4]
 8000e78:	0039      	movs	r1, r7
 8000e7a:	0028      	movs	r0, r5
 8000e7c:	f7ff fe7a 	bl	8000b74 <_malloc_r>
 8000e80:	2800      	cmp	r0, #0
 8000e82:	d108      	bne.n	8000e96 <__smakebuf_r+0x4a>
 8000e84:	220c      	movs	r2, #12
 8000e86:	5ea3      	ldrsh	r3, [r4, r2]
 8000e88:	059a      	lsls	r2, r3, #22
 8000e8a:	d4ed      	bmi.n	8000e68 <__smakebuf_r+0x1c>
 8000e8c:	2203      	movs	r2, #3
 8000e8e:	4393      	bics	r3, r2
 8000e90:	431e      	orrs	r6, r3
 8000e92:	81a6      	strh	r6, [r4, #12]
 8000e94:	e7e2      	b.n	8000e5c <__smakebuf_r+0x10>
 8000e96:	2380      	movs	r3, #128	@ 0x80
 8000e98:	89a2      	ldrh	r2, [r4, #12]
 8000e9a:	6020      	str	r0, [r4, #0]
 8000e9c:	4313      	orrs	r3, r2
 8000e9e:	81a3      	strh	r3, [r4, #12]
 8000ea0:	9b03      	ldr	r3, [sp, #12]
 8000ea2:	6120      	str	r0, [r4, #16]
 8000ea4:	6167      	str	r7, [r4, #20]
 8000ea6:	2b00      	cmp	r3, #0
 8000ea8:	d00c      	beq.n	8000ec4 <__smakebuf_r+0x78>
 8000eaa:	0028      	movs	r0, r5
 8000eac:	230e      	movs	r3, #14
 8000eae:	5ee1      	ldrsh	r1, [r4, r3]
 8000eb0:	f000 f820 	bl	8000ef4 <_isatty_r>
 8000eb4:	2800      	cmp	r0, #0
 8000eb6:	d005      	beq.n	8000ec4 <__smakebuf_r+0x78>
 8000eb8:	2303      	movs	r3, #3
 8000eba:	89a2      	ldrh	r2, [r4, #12]
 8000ebc:	439a      	bics	r2, r3
 8000ebe:	3b02      	subs	r3, #2
 8000ec0:	4313      	orrs	r3, r2
 8000ec2:	81a3      	strh	r3, [r4, #12]
 8000ec4:	89a3      	ldrh	r3, [r4, #12]
 8000ec6:	9a01      	ldr	r2, [sp, #4]
 8000ec8:	4313      	orrs	r3, r2
 8000eca:	81a3      	strh	r3, [r4, #12]
 8000ecc:	e7cc      	b.n	8000e68 <__smakebuf_r+0x1c>
	...

08000ed0 <_fstat_r>:
 8000ed0:	2300      	movs	r3, #0
 8000ed2:	b570      	push	{r4, r5, r6, lr}
 8000ed4:	4d06      	ldr	r5, [pc, #24]	@ (8000ef0 <_fstat_r+0x20>)
 8000ed6:	0004      	movs	r4, r0
 8000ed8:	0008      	movs	r0, r1
 8000eda:	0011      	movs	r1, r2
 8000edc:	602b      	str	r3, [r5, #0]
 8000ede:	f000 f943 	bl	8001168 <_fstat>
 8000ee2:	1c43      	adds	r3, r0, #1
 8000ee4:	d103      	bne.n	8000eee <_fstat_r+0x1e>
 8000ee6:	682b      	ldr	r3, [r5, #0]
 8000ee8:	2b00      	cmp	r3, #0
 8000eea:	d000      	beq.n	8000eee <_fstat_r+0x1e>
 8000eec:	6023      	str	r3, [r4, #0]
 8000eee:	bd70      	pop	{r4, r5, r6, pc}
 8000ef0:	200001c0 	.word	0x200001c0

08000ef4 <_isatty_r>:
 8000ef4:	2300      	movs	r3, #0
 8000ef6:	b570      	push	{r4, r5, r6, lr}
 8000ef8:	4d06      	ldr	r5, [pc, #24]	@ (8000f14 <_isatty_r+0x20>)
 8000efa:	0004      	movs	r4, r0
 8000efc:	0008      	movs	r0, r1
 8000efe:	602b      	str	r3, [r5, #0]
 8000f00:	f000 fa90 	bl	8001424 <_isatty>
 8000f04:	1c43      	adds	r3, r0, #1
 8000f06:	d103      	bne.n	8000f10 <_isatty_r+0x1c>
 8000f08:	682b      	ldr	r3, [r5, #0]
 8000f0a:	2b00      	cmp	r3, #0
 8000f0c:	d000      	beq.n	8000f10 <_isatty_r+0x1c>
 8000f0e:	6023      	str	r3, [r4, #0]
 8000f10:	bd70      	pop	{r4, r5, r6, pc}
 8000f12:	46c0      	nop			@ (mov r8, r8)
 8000f14:	200001c0 	.word	0x200001c0

08000f18 <_sbrk_r>:
 8000f18:	2300      	movs	r3, #0
 8000f1a:	b570      	push	{r4, r5, r6, lr}
 8000f1c:	4d06      	ldr	r5, [pc, #24]	@ (8000f38 <_sbrk_r+0x20>)
 8000f1e:	0004      	movs	r4, r0
 8000f20:	0008      	movs	r0, r1
 8000f22:	602b      	str	r3, [r5, #0]
 8000f24:	f7ff f93c 	bl	80001a0 <_sbrk>
 8000f28:	1c43      	adds	r3, r0, #1
 8000f2a:	d103      	bne.n	8000f34 <_sbrk_r+0x1c>
 8000f2c:	682b      	ldr	r3, [r5, #0]
 8000f2e:	2b00      	cmp	r3, #0
 8000f30:	d000      	beq.n	8000f34 <_sbrk_r+0x1c>
 8000f32:	6023      	str	r3, [r4, #0]
 8000f34:	bd70      	pop	{r4, r5, r6, pc}
 8000f36:	46c0      	nop			@ (mov r8, r8)
 8000f38:	200001c0 	.word	0x200001c0

08000f3c <findslot>:
 8000f3c:	4b0a      	ldr	r3, [pc, #40]	@ (8000f68 <findslot+0x2c>)
 8000f3e:	b510      	push	{r4, lr}
 8000f40:	0004      	movs	r4, r0
 8000f42:	6818      	ldr	r0, [r3, #0]
 8000f44:	2800      	cmp	r0, #0
 8000f46:	d004      	beq.n	8000f52 <findslot+0x16>
 8000f48:	6a03      	ldr	r3, [r0, #32]
 8000f4a:	2b00      	cmp	r3, #0
 8000f4c:	d101      	bne.n	8000f52 <findslot+0x16>
 8000f4e:	f7ff fba1 	bl	8000694 <__sinit>
 8000f52:	2000      	movs	r0, #0
 8000f54:	2c13      	cmp	r4, #19
 8000f56:	d805      	bhi.n	8000f64 <findslot+0x28>
 8000f58:	4b04      	ldr	r3, [pc, #16]	@ (8000f6c <findslot+0x30>)
 8000f5a:	00e4      	lsls	r4, r4, #3
 8000f5c:	58e2      	ldr	r2, [r4, r3]
 8000f5e:	3201      	adds	r2, #1
 8000f60:	d000      	beq.n	8000f64 <findslot+0x28>
 8000f62:	18e0      	adds	r0, r4, r3
 8000f64:	bd10      	pop	{r4, pc}
 8000f66:	46c0      	nop			@ (mov r8, r8)
 8000f68:	2000000c 	.word	0x2000000c
 8000f6c:	200001dc 	.word	0x200001dc

08000f70 <error>:
 8000f70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f72:	0004      	movs	r4, r0
 8000f74:	f7ff fd64 	bl	8000a40 <__errno>
 8000f78:	2613      	movs	r6, #19
 8000f7a:	0005      	movs	r5, r0
 8000f7c:	2700      	movs	r7, #0
 8000f7e:	1c30      	adds	r0, r6, #0
 8000f80:	1c39      	adds	r1, r7, #0
 8000f82:	beab      	bkpt	0x00ab
 8000f84:	1c06      	adds	r6, r0, #0
 8000f86:	602e      	str	r6, [r5, #0]
 8000f88:	0020      	movs	r0, r4
 8000f8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08000f8c <checkerror>:
 8000f8c:	b510      	push	{r4, lr}
 8000f8e:	1c43      	adds	r3, r0, #1
 8000f90:	d101      	bne.n	8000f96 <checkerror+0xa>
 8000f92:	f7ff ffed 	bl	8000f70 <error>
 8000f96:	bd10      	pop	{r4, pc}

08000f98 <_swiread>:
 8000f98:	b530      	push	{r4, r5, lr}
 8000f9a:	b085      	sub	sp, #20
 8000f9c:	ad01      	add	r5, sp, #4
 8000f9e:	9001      	str	r0, [sp, #4]
 8000fa0:	9102      	str	r1, [sp, #8]
 8000fa2:	9203      	str	r2, [sp, #12]
 8000fa4:	2406      	movs	r4, #6
 8000fa6:	1c20      	adds	r0, r4, #0
 8000fa8:	1c29      	adds	r1, r5, #0
 8000faa:	beab      	bkpt	0x00ab
 8000fac:	1c04      	adds	r4, r0, #0
 8000fae:	0020      	movs	r0, r4
 8000fb0:	f7ff ffec 	bl	8000f8c <checkerror>
 8000fb4:	b005      	add	sp, #20
 8000fb6:	bd30      	pop	{r4, r5, pc}

08000fb8 <_read>:
 8000fb8:	b570      	push	{r4, r5, r6, lr}
 8000fba:	000e      	movs	r6, r1
 8000fbc:	0014      	movs	r4, r2
 8000fbe:	f7ff ffbd 	bl	8000f3c <findslot>
 8000fc2:	1e05      	subs	r5, r0, #0
 8000fc4:	d106      	bne.n	8000fd4 <_read+0x1c>
 8000fc6:	f7ff fd3b 	bl	8000a40 <__errno>
 8000fca:	2309      	movs	r3, #9
 8000fcc:	6003      	str	r3, [r0, #0]
 8000fce:	2001      	movs	r0, #1
 8000fd0:	4240      	negs	r0, r0
 8000fd2:	bd70      	pop	{r4, r5, r6, pc}
 8000fd4:	0022      	movs	r2, r4
 8000fd6:	0031      	movs	r1, r6
 8000fd8:	6800      	ldr	r0, [r0, #0]
 8000fda:	f7ff ffdd 	bl	8000f98 <_swiread>
 8000fde:	1c43      	adds	r3, r0, #1
 8000fe0:	d0f5      	beq.n	8000fce <_read+0x16>
 8000fe2:	686b      	ldr	r3, [r5, #4]
 8000fe4:	1a20      	subs	r0, r4, r0
 8000fe6:	181b      	adds	r3, r3, r0
 8000fe8:	606b      	str	r3, [r5, #4]
 8000fea:	e7f2      	b.n	8000fd2 <_read+0x1a>

08000fec <_swilseek>:
 8000fec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000fee:	000c      	movs	r4, r1
 8000ff0:	0016      	movs	r6, r2
 8000ff2:	f7ff ffa3 	bl	8000f3c <findslot>
 8000ff6:	1e05      	subs	r5, r0, #0
 8000ff8:	d107      	bne.n	800100a <_swilseek+0x1e>
 8000ffa:	f7ff fd21 	bl	8000a40 <__errno>
 8000ffe:	2309      	movs	r3, #9
 8001000:	6003      	str	r3, [r0, #0]
 8001002:	2401      	movs	r4, #1
 8001004:	4264      	negs	r4, r4
 8001006:	0020      	movs	r0, r4
 8001008:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800100a:	2e02      	cmp	r6, #2
 800100c:	d903      	bls.n	8001016 <_swilseek+0x2a>
 800100e:	f7ff fd17 	bl	8000a40 <__errno>
 8001012:	2316      	movs	r3, #22
 8001014:	e7f4      	b.n	8001000 <_swilseek+0x14>
 8001016:	2e01      	cmp	r6, #1
 8001018:	d112      	bne.n	8001040 <_swilseek+0x54>
 800101a:	6843      	ldr	r3, [r0, #4]
 800101c:	18e4      	adds	r4, r4, r3
 800101e:	d4f6      	bmi.n	800100e <_swilseek+0x22>
 8001020:	466f      	mov	r7, sp
 8001022:	682b      	ldr	r3, [r5, #0]
 8001024:	260a      	movs	r6, #10
 8001026:	9300      	str	r3, [sp, #0]
 8001028:	607c      	str	r4, [r7, #4]
 800102a:	1c30      	adds	r0, r6, #0
 800102c:	1c39      	adds	r1, r7, #0
 800102e:	beab      	bkpt	0x00ab
 8001030:	1c06      	adds	r6, r0, #0
 8001032:	0030      	movs	r0, r6
 8001034:	f7ff ffaa 	bl	8000f8c <checkerror>
 8001038:	2800      	cmp	r0, #0
 800103a:	dbe2      	blt.n	8001002 <_swilseek+0x16>
 800103c:	606c      	str	r4, [r5, #4]
 800103e:	e7e2      	b.n	8001006 <_swilseek+0x1a>
 8001040:	6803      	ldr	r3, [r0, #0]
 8001042:	2e02      	cmp	r6, #2
 8001044:	d1ec      	bne.n	8001020 <_swilseek+0x34>
 8001046:	466f      	mov	r7, sp
 8001048:	9300      	str	r3, [sp, #0]
 800104a:	360a      	adds	r6, #10
 800104c:	1c30      	adds	r0, r6, #0
 800104e:	1c39      	adds	r1, r7, #0
 8001050:	beab      	bkpt	0x00ab
 8001052:	1c06      	adds	r6, r0, #0
 8001054:	0030      	movs	r0, r6
 8001056:	f7ff ff99 	bl	8000f8c <checkerror>
 800105a:	1824      	adds	r4, r4, r0
 800105c:	3001      	adds	r0, #1
 800105e:	d1df      	bne.n	8001020 <_swilseek+0x34>
 8001060:	e7cf      	b.n	8001002 <_swilseek+0x16>

08001062 <_lseek>:
 8001062:	b510      	push	{r4, lr}
 8001064:	f7ff ffc2 	bl	8000fec <_swilseek>
 8001068:	bd10      	pop	{r4, pc}

0800106a <_swiwrite>:
 800106a:	b530      	push	{r4, r5, lr}
 800106c:	b085      	sub	sp, #20
 800106e:	ad01      	add	r5, sp, #4
 8001070:	9001      	str	r0, [sp, #4]
 8001072:	9102      	str	r1, [sp, #8]
 8001074:	9203      	str	r2, [sp, #12]
 8001076:	2405      	movs	r4, #5
 8001078:	1c20      	adds	r0, r4, #0
 800107a:	1c29      	adds	r1, r5, #0
 800107c:	beab      	bkpt	0x00ab
 800107e:	1c04      	adds	r4, r0, #0
 8001080:	0020      	movs	r0, r4
 8001082:	f7ff ff83 	bl	8000f8c <checkerror>
 8001086:	b005      	add	sp, #20
 8001088:	bd30      	pop	{r4, r5, pc}

0800108a <_write>:
 800108a:	b570      	push	{r4, r5, r6, lr}
 800108c:	000e      	movs	r6, r1
 800108e:	0015      	movs	r5, r2
 8001090:	f7ff ff54 	bl	8000f3c <findslot>
 8001094:	1e04      	subs	r4, r0, #0
 8001096:	d106      	bne.n	80010a6 <_write+0x1c>
 8001098:	f7ff fcd2 	bl	8000a40 <__errno>
 800109c:	2309      	movs	r3, #9
 800109e:	6003      	str	r3, [r0, #0]
 80010a0:	2001      	movs	r0, #1
 80010a2:	4240      	negs	r0, r0
 80010a4:	bd70      	pop	{r4, r5, r6, pc}
 80010a6:	002a      	movs	r2, r5
 80010a8:	0031      	movs	r1, r6
 80010aa:	6800      	ldr	r0, [r0, #0]
 80010ac:	f7ff ffdd 	bl	800106a <_swiwrite>
 80010b0:	1e03      	subs	r3, r0, #0
 80010b2:	dbf5      	blt.n	80010a0 <_write+0x16>
 80010b4:	6862      	ldr	r2, [r4, #4]
 80010b6:	1a28      	subs	r0, r5, r0
 80010b8:	1812      	adds	r2, r2, r0
 80010ba:	6062      	str	r2, [r4, #4]
 80010bc:	42ab      	cmp	r3, r5
 80010be:	d1f1      	bne.n	80010a4 <_write+0x1a>
 80010c0:	2000      	movs	r0, #0
 80010c2:	f7ff ff55 	bl	8000f70 <error>
 80010c6:	e7ed      	b.n	80010a4 <_write+0x1a>

080010c8 <_swiclose>:
 80010c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80010ca:	2402      	movs	r4, #2
 80010cc:	9001      	str	r0, [sp, #4]
 80010ce:	ad01      	add	r5, sp, #4
 80010d0:	1c20      	adds	r0, r4, #0
 80010d2:	1c29      	adds	r1, r5, #0
 80010d4:	beab      	bkpt	0x00ab
 80010d6:	1c04      	adds	r4, r0, #0
 80010d8:	0020      	movs	r0, r4
 80010da:	f7ff ff57 	bl	8000f8c <checkerror>
 80010de:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

080010e0 <_close>:
 80010e0:	b570      	push	{r4, r5, r6, lr}
 80010e2:	0004      	movs	r4, r0
 80010e4:	f7ff ff2a 	bl	8000f3c <findslot>
 80010e8:	1e05      	subs	r5, r0, #0
 80010ea:	d106      	bne.n	80010fa <_close+0x1a>
 80010ec:	f7ff fca8 	bl	8000a40 <__errno>
 80010f0:	2309      	movs	r3, #9
 80010f2:	6003      	str	r3, [r0, #0]
 80010f4:	2001      	movs	r0, #1
 80010f6:	4240      	negs	r0, r0
 80010f8:	bd70      	pop	{r4, r5, r6, pc}
 80010fa:	3c01      	subs	r4, #1
 80010fc:	2c01      	cmp	r4, #1
 80010fe:	d809      	bhi.n	8001114 <_close+0x34>
 8001100:	4b07      	ldr	r3, [pc, #28]	@ (8001120 <_close+0x40>)
 8001102:	689a      	ldr	r2, [r3, #8]
 8001104:	691b      	ldr	r3, [r3, #16]
 8001106:	429a      	cmp	r2, r3
 8001108:	d104      	bne.n	8001114 <_close+0x34>
 800110a:	2301      	movs	r3, #1
 800110c:	425b      	negs	r3, r3
 800110e:	2000      	movs	r0, #0
 8001110:	602b      	str	r3, [r5, #0]
 8001112:	e7f1      	b.n	80010f8 <_close+0x18>
 8001114:	6828      	ldr	r0, [r5, #0]
 8001116:	f7ff ffd7 	bl	80010c8 <_swiclose>
 800111a:	2800      	cmp	r0, #0
 800111c:	d0f5      	beq.n	800110a <_close+0x2a>
 800111e:	e7eb      	b.n	80010f8 <_close+0x18>
 8001120:	200001dc 	.word	0x200001dc

08001124 <_swistat>:
 8001124:	b570      	push	{r4, r5, r6, lr}
 8001126:	000c      	movs	r4, r1
 8001128:	f7ff ff08 	bl	8000f3c <findslot>
 800112c:	1e05      	subs	r5, r0, #0
 800112e:	d106      	bne.n	800113e <_swistat+0x1a>
 8001130:	f7ff fc86 	bl	8000a40 <__errno>
 8001134:	2309      	movs	r3, #9
 8001136:	6003      	str	r3, [r0, #0]
 8001138:	2001      	movs	r0, #1
 800113a:	4240      	negs	r0, r0
 800113c:	bd70      	pop	{r4, r5, r6, pc}
 800113e:	2380      	movs	r3, #128	@ 0x80
 8001140:	6862      	ldr	r2, [r4, #4]
 8001142:	019b      	lsls	r3, r3, #6
 8001144:	4313      	orrs	r3, r2
 8001146:	6063      	str	r3, [r4, #4]
 8001148:	2380      	movs	r3, #128	@ 0x80
 800114a:	00db      	lsls	r3, r3, #3
 800114c:	260c      	movs	r6, #12
 800114e:	64a3      	str	r3, [r4, #72]	@ 0x48
 8001150:	1c30      	adds	r0, r6, #0
 8001152:	1c29      	adds	r1, r5, #0
 8001154:	beab      	bkpt	0x00ab
 8001156:	1c05      	adds	r5, r0, #0
 8001158:	0028      	movs	r0, r5
 800115a:	f7ff ff17 	bl	8000f8c <checkerror>
 800115e:	1c43      	adds	r3, r0, #1
 8001160:	d0ea      	beq.n	8001138 <_swistat+0x14>
 8001162:	6120      	str	r0, [r4, #16]
 8001164:	2000      	movs	r0, #0
 8001166:	e7e9      	b.n	800113c <_swistat+0x18>

08001168 <_fstat>:
 8001168:	b570      	push	{r4, r5, r6, lr}
 800116a:	000c      	movs	r4, r1
 800116c:	0005      	movs	r5, r0
 800116e:	2258      	movs	r2, #88	@ 0x58
 8001170:	2100      	movs	r1, #0
 8001172:	0020      	movs	r0, r4
 8001174:	f7ff fc0e 	bl	8000994 <memset>
 8001178:	0028      	movs	r0, r5
 800117a:	0021      	movs	r1, r4
 800117c:	f7ff ffd2 	bl	8001124 <_swistat>
 8001180:	bd70      	pop	{r4, r5, r6, pc}

08001182 <_stat>:
 8001182:	b570      	push	{r4, r5, r6, lr}
 8001184:	000d      	movs	r5, r1
 8001186:	0004      	movs	r4, r0
 8001188:	2258      	movs	r2, #88	@ 0x58
 800118a:	2100      	movs	r1, #0
 800118c:	0028      	movs	r0, r5
 800118e:	f7ff fc01 	bl	8000994 <memset>
 8001192:	0020      	movs	r0, r4
 8001194:	2100      	movs	r1, #0
 8001196:	f000 f813 	bl	80011c0 <_swiopen>
 800119a:	0004      	movs	r4, r0
 800119c:	1c43      	adds	r3, r0, #1
 800119e:	d00c      	beq.n	80011ba <_stat+0x38>
 80011a0:	2381      	movs	r3, #129	@ 0x81
 80011a2:	686a      	ldr	r2, [r5, #4]
 80011a4:	021b      	lsls	r3, r3, #8
 80011a6:	4313      	orrs	r3, r2
 80011a8:	0029      	movs	r1, r5
 80011aa:	606b      	str	r3, [r5, #4]
 80011ac:	f7ff ffba 	bl	8001124 <_swistat>
 80011b0:	0005      	movs	r5, r0
 80011b2:	0020      	movs	r0, r4
 80011b4:	f7ff ff94 	bl	80010e0 <_close>
 80011b8:	002c      	movs	r4, r5
 80011ba:	0020      	movs	r0, r4
 80011bc:	bd70      	pop	{r4, r5, r6, pc}
	...

080011c0 <_swiopen>:
 80011c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80011c2:	000e      	movs	r6, r1
 80011c4:	2500      	movs	r5, #0
 80011c6:	4b2a      	ldr	r3, [pc, #168]	@ (8001270 <_swiopen+0xb0>)
 80011c8:	b09b      	sub	sp, #108	@ 0x6c
 80011ca:	9001      	str	r0, [sp, #4]
 80011cc:	9302      	str	r3, [sp, #8]
 80011ce:	00eb      	lsls	r3, r5, #3
 80011d0:	9303      	str	r3, [sp, #12]
 80011d2:	9b02      	ldr	r3, [sp, #8]
 80011d4:	00ea      	lsls	r2, r5, #3
 80011d6:	589b      	ldr	r3, [r3, r2]
 80011d8:	3301      	adds	r3, #1
 80011da:	d00b      	beq.n	80011f4 <_swiopen+0x34>
 80011dc:	3501      	adds	r5, #1
 80011de:	2d14      	cmp	r5, #20
 80011e0:	d1f5      	bne.n	80011ce <_swiopen+0xe>
 80011e2:	f7ff fc2d 	bl	8000a40 <__errno>
 80011e6:	2318      	movs	r3, #24
 80011e8:	2501      	movs	r5, #1
 80011ea:	6003      	str	r3, [r0, #0]
 80011ec:	426d      	negs	r5, r5
 80011ee:	0028      	movs	r0, r5
 80011f0:	b01b      	add	sp, #108	@ 0x6c
 80011f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80011f4:	23a0      	movs	r3, #160	@ 0xa0
 80011f6:	0032      	movs	r2, r6
 80011f8:	011b      	lsls	r3, r3, #4
 80011fa:	401a      	ands	r2, r3
 80011fc:	af04      	add	r7, sp, #16
 80011fe:	429a      	cmp	r2, r3
 8001200:	d109      	bne.n	8001216 <_swiopen+0x56>
 8001202:	0039      	movs	r1, r7
 8001204:	9801      	ldr	r0, [sp, #4]
 8001206:	f7ff ffbc 	bl	8001182 <_stat>
 800120a:	3001      	adds	r0, #1
 800120c:	d003      	beq.n	8001216 <_swiopen+0x56>
 800120e:	f7ff fc17 	bl	8000a40 <__errno>
 8001212:	2311      	movs	r3, #17
 8001214:	e7e8      	b.n	80011e8 <_swiopen+0x28>
 8001216:	2302      	movs	r3, #2
 8001218:	03f4      	lsls	r4, r6, #15
 800121a:	0fe4      	lsrs	r4, r4, #31
 800121c:	421e      	tst	r6, r3
 800121e:	d000      	beq.n	8001222 <_swiopen+0x62>
 8001220:	431c      	orrs	r4, r3
 8001222:	4b14      	ldr	r3, [pc, #80]	@ (8001274 <_swiopen+0xb4>)
 8001224:	421e      	tst	r6, r3
 8001226:	d001      	beq.n	800122c <_swiopen+0x6c>
 8001228:	2304      	movs	r3, #4
 800122a:	431c      	orrs	r4, r3
 800122c:	2308      	movs	r3, #8
 800122e:	421e      	tst	r6, r3
 8001230:	d002      	beq.n	8001238 <_swiopen+0x78>
 8001232:	2204      	movs	r2, #4
 8001234:	4394      	bics	r4, r2
 8001236:	431c      	orrs	r4, r3
 8001238:	9b01      	ldr	r3, [sp, #4]
 800123a:	0018      	movs	r0, r3
 800123c:	9304      	str	r3, [sp, #16]
 800123e:	f7fe ff61 	bl	8000104 <strlen>
 8001242:	607c      	str	r4, [r7, #4]
 8001244:	60b8      	str	r0, [r7, #8]
 8001246:	2401      	movs	r4, #1
 8001248:	1c20      	adds	r0, r4, #0
 800124a:	1c39      	adds	r1, r7, #0
 800124c:	beab      	bkpt	0x00ab
 800124e:	1c04      	adds	r4, r0, #0
 8001250:	2c00      	cmp	r4, #0
 8001252:	db07      	blt.n	8001264 <_swiopen+0xa4>
 8001254:	00ea      	lsls	r2, r5, #3
 8001256:	9b02      	ldr	r3, [sp, #8]
 8001258:	4694      	mov	ip, r2
 800125a:	509c      	str	r4, [r3, r2]
 800125c:	2200      	movs	r2, #0
 800125e:	4463      	add	r3, ip
 8001260:	605a      	str	r2, [r3, #4]
 8001262:	e7c4      	b.n	80011ee <_swiopen+0x2e>
 8001264:	0020      	movs	r0, r4
 8001266:	f7ff fe83 	bl	8000f70 <error>
 800126a:	0005      	movs	r5, r0
 800126c:	e7bf      	b.n	80011ee <_swiopen+0x2e>
 800126e:	46c0      	nop			@ (mov r8, r8)
 8001270:	200001dc 	.word	0x200001dc
 8001274:	00000601 	.word	0x00000601

08001278 <_get_semihosting_exts>:
 8001278:	b5f0      	push	{r4, r5, r6, r7, lr}
 800127a:	b085      	sub	sp, #20
 800127c:	9000      	str	r0, [sp, #0]
 800127e:	9101      	str	r1, [sp, #4]
 8001280:	4826      	ldr	r0, [pc, #152]	@ (800131c <_get_semihosting_exts+0xa4>)
 8001282:	2100      	movs	r1, #0
 8001284:	0015      	movs	r5, r2
 8001286:	f7ff ff9b 	bl	80011c0 <_swiopen>
 800128a:	0004      	movs	r4, r0
 800128c:	002a      	movs	r2, r5
 800128e:	2100      	movs	r1, #0
 8001290:	9800      	ldr	r0, [sp, #0]
 8001292:	f7ff fb7f 	bl	8000994 <memset>
 8001296:	1c63      	adds	r3, r4, #1
 8001298:	d013      	beq.n	80012c2 <_get_semihosting_exts+0x4a>
 800129a:	0020      	movs	r0, r4
 800129c:	f7ff fe4e 	bl	8000f3c <findslot>
 80012a0:	260c      	movs	r6, #12
 80012a2:	0007      	movs	r7, r0
 80012a4:	1c30      	adds	r0, r6, #0
 80012a6:	1c39      	adds	r1, r7, #0
 80012a8:	beab      	bkpt	0x00ab
 80012aa:	1c06      	adds	r6, r0, #0
 80012ac:	0030      	movs	r0, r6
 80012ae:	f7ff fe6d 	bl	8000f8c <checkerror>
 80012b2:	2803      	cmp	r0, #3
 80012b4:	dd02      	ble.n	80012bc <_get_semihosting_exts+0x44>
 80012b6:	3803      	subs	r0, #3
 80012b8:	42a8      	cmp	r0, r5
 80012ba:	dc06      	bgt.n	80012ca <_get_semihosting_exts+0x52>
 80012bc:	0020      	movs	r0, r4
 80012be:	f7ff ff0f 	bl	80010e0 <_close>
 80012c2:	2001      	movs	r0, #1
 80012c4:	4240      	negs	r0, r0
 80012c6:	b005      	add	sp, #20
 80012c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012ca:	ae03      	add	r6, sp, #12
 80012cc:	2204      	movs	r2, #4
 80012ce:	0031      	movs	r1, r6
 80012d0:	0020      	movs	r0, r4
 80012d2:	f7ff fe71 	bl	8000fb8 <_read>
 80012d6:	2803      	cmp	r0, #3
 80012d8:	ddf0      	ble.n	80012bc <_get_semihosting_exts+0x44>
 80012da:	7833      	ldrb	r3, [r6, #0]
 80012dc:	2b53      	cmp	r3, #83	@ 0x53
 80012de:	d1ed      	bne.n	80012bc <_get_semihosting_exts+0x44>
 80012e0:	7873      	ldrb	r3, [r6, #1]
 80012e2:	2b48      	cmp	r3, #72	@ 0x48
 80012e4:	d1ea      	bne.n	80012bc <_get_semihosting_exts+0x44>
 80012e6:	78b3      	ldrb	r3, [r6, #2]
 80012e8:	2b46      	cmp	r3, #70	@ 0x46
 80012ea:	d1e7      	bne.n	80012bc <_get_semihosting_exts+0x44>
 80012ec:	78f3      	ldrb	r3, [r6, #3]
 80012ee:	2b42      	cmp	r3, #66	@ 0x42
 80012f0:	d1e4      	bne.n	80012bc <_get_semihosting_exts+0x44>
 80012f2:	2201      	movs	r2, #1
 80012f4:	0020      	movs	r0, r4
 80012f6:	9901      	ldr	r1, [sp, #4]
 80012f8:	f7ff fe78 	bl	8000fec <_swilseek>
 80012fc:	2800      	cmp	r0, #0
 80012fe:	dbdd      	blt.n	80012bc <_get_semihosting_exts+0x44>
 8001300:	002a      	movs	r2, r5
 8001302:	9900      	ldr	r1, [sp, #0]
 8001304:	0020      	movs	r0, r4
 8001306:	f7ff fe57 	bl	8000fb8 <_read>
 800130a:	0005      	movs	r5, r0
 800130c:	0020      	movs	r0, r4
 800130e:	f7ff fee7 	bl	80010e0 <_close>
 8001312:	0028      	movs	r0, r5
 8001314:	f7ff fe3a 	bl	8000f8c <checkerror>
 8001318:	e7d5      	b.n	80012c6 <_get_semihosting_exts+0x4e>
 800131a:	46c0      	nop			@ (mov r8, r8)
 800131c:	08001484 	.word	0x08001484

08001320 <initialise_semihosting_exts>:
 8001320:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001322:	2401      	movs	r4, #1
 8001324:	2100      	movs	r1, #0
 8001326:	4e09      	ldr	r6, [pc, #36]	@ (800134c <initialise_semihosting_exts+0x2c>)
 8001328:	4d09      	ldr	r5, [pc, #36]	@ (8001350 <initialise_semihosting_exts+0x30>)
 800132a:	af01      	add	r7, sp, #4
 800132c:	0022      	movs	r2, r4
 800132e:	0038      	movs	r0, r7
 8001330:	6031      	str	r1, [r6, #0]
 8001332:	602c      	str	r4, [r5, #0]
 8001334:	f7ff ffa0 	bl	8001278 <_get_semihosting_exts>
 8001338:	2800      	cmp	r0, #0
 800133a:	dd05      	ble.n	8001348 <initialise_semihosting_exts+0x28>
 800133c:	2202      	movs	r2, #2
 800133e:	783b      	ldrb	r3, [r7, #0]
 8001340:	401c      	ands	r4, r3
 8001342:	4013      	ands	r3, r2
 8001344:	6034      	str	r4, [r6, #0]
 8001346:	602b      	str	r3, [r5, #0]
 8001348:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 800134a:	46c0      	nop			@ (mov r8, r8)
 800134c:	20000060 	.word	0x20000060
 8001350:	2000005c 	.word	0x2000005c

08001354 <_has_ext_stdout_stderr>:
 8001354:	b510      	push	{r4, lr}
 8001356:	4c04      	ldr	r4, [pc, #16]	@ (8001368 <_has_ext_stdout_stderr+0x14>)
 8001358:	6823      	ldr	r3, [r4, #0]
 800135a:	2b00      	cmp	r3, #0
 800135c:	da01      	bge.n	8001362 <_has_ext_stdout_stderr+0xe>
 800135e:	f7ff ffdf 	bl	8001320 <initialise_semihosting_exts>
 8001362:	6820      	ldr	r0, [r4, #0]
 8001364:	bd10      	pop	{r4, pc}
 8001366:	46c0      	nop			@ (mov r8, r8)
 8001368:	2000005c 	.word	0x2000005c

0800136c <initialise_monitor_handles>:
 800136c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800136e:	4b28      	ldr	r3, [pc, #160]	@ (8001410 <initialise_monitor_handles+0xa4>)
 8001370:	b087      	sub	sp, #28
 8001372:	9303      	str	r3, [sp, #12]
 8001374:	2500      	movs	r5, #0
 8001376:	9300      	str	r3, [sp, #0]
 8001378:	2303      	movs	r3, #3
 800137a:	ac03      	add	r4, sp, #12
 800137c:	60a3      	str	r3, [r4, #8]
 800137e:	2601      	movs	r6, #1
 8001380:	6065      	str	r5, [r4, #4]
 8001382:	1c30      	adds	r0, r6, #0
 8001384:	1c21      	adds	r1, r4, #0
 8001386:	beab      	bkpt	0x00ab
 8001388:	1c06      	adds	r6, r0, #0
 800138a:	2101      	movs	r1, #1
 800138c:	4b21      	ldr	r3, [pc, #132]	@ (8001414 <initialise_monitor_handles+0xa8>)
 800138e:	4249      	negs	r1, r1
 8001390:	9301      	str	r3, [sp, #4]
 8001392:	601e      	str	r6, [r3, #0]
 8001394:	002b      	movs	r3, r5
 8001396:	4d20      	ldr	r5, [pc, #128]	@ (8001418 <initialise_monitor_handles+0xac>)
 8001398:	00da      	lsls	r2, r3, #3
 800139a:	3301      	adds	r3, #1
 800139c:	50a9      	str	r1, [r5, r2]
 800139e:	2b14      	cmp	r3, #20
 80013a0:	d1fa      	bne.n	8001398 <initialise_monitor_handles+0x2c>
 80013a2:	f7ff ffd7 	bl	8001354 <_has_ext_stdout_stderr>
 80013a6:	2800      	cmp	r0, #0
 80013a8:	d018      	beq.n	80013dc <initialise_monitor_handles+0x70>
 80013aa:	9b00      	ldr	r3, [sp, #0]
 80013ac:	2601      	movs	r6, #1
 80013ae:	9303      	str	r3, [sp, #12]
 80013b0:	2303      	movs	r3, #3
 80013b2:	60a3      	str	r3, [r4, #8]
 80013b4:	3301      	adds	r3, #1
 80013b6:	6063      	str	r3, [r4, #4]
 80013b8:	1c30      	adds	r0, r6, #0
 80013ba:	1c21      	adds	r1, r4, #0
 80013bc:	beab      	bkpt	0x00ab
 80013be:	1c07      	adds	r7, r0, #0
 80013c0:	4b16      	ldr	r3, [pc, #88]	@ (800141c <initialise_monitor_handles+0xb0>)
 80013c2:	9a00      	ldr	r2, [sp, #0]
 80013c4:	601f      	str	r7, [r3, #0]
 80013c6:	2303      	movs	r3, #3
 80013c8:	9203      	str	r2, [sp, #12]
 80013ca:	60a3      	str	r3, [r4, #8]
 80013cc:	3305      	adds	r3, #5
 80013ce:	6063      	str	r3, [r4, #4]
 80013d0:	1c30      	adds	r0, r6, #0
 80013d2:	1c21      	adds	r1, r4, #0
 80013d4:	beab      	bkpt	0x00ab
 80013d6:	1c06      	adds	r6, r0, #0
 80013d8:	4b11      	ldr	r3, [pc, #68]	@ (8001420 <initialise_monitor_handles+0xb4>)
 80013da:	601e      	str	r6, [r3, #0]
 80013dc:	4e10      	ldr	r6, [pc, #64]	@ (8001420 <initialise_monitor_handles+0xb4>)
 80013de:	6833      	ldr	r3, [r6, #0]
 80013e0:	3301      	adds	r3, #1
 80013e2:	d102      	bne.n	80013ea <initialise_monitor_handles+0x7e>
 80013e4:	4b0d      	ldr	r3, [pc, #52]	@ (800141c <initialise_monitor_handles+0xb0>)
 80013e6:	681b      	ldr	r3, [r3, #0]
 80013e8:	6033      	str	r3, [r6, #0]
 80013ea:	2400      	movs	r4, #0
 80013ec:	9b01      	ldr	r3, [sp, #4]
 80013ee:	606c      	str	r4, [r5, #4]
 80013f0:	681b      	ldr	r3, [r3, #0]
 80013f2:	602b      	str	r3, [r5, #0]
 80013f4:	f7ff ffae 	bl	8001354 <_has_ext_stdout_stderr>
 80013f8:	42a0      	cmp	r0, r4
 80013fa:	d006      	beq.n	800140a <initialise_monitor_handles+0x9e>
 80013fc:	4b07      	ldr	r3, [pc, #28]	@ (800141c <initialise_monitor_handles+0xb0>)
 80013fe:	60ec      	str	r4, [r5, #12]
 8001400:	681b      	ldr	r3, [r3, #0]
 8001402:	616c      	str	r4, [r5, #20]
 8001404:	60ab      	str	r3, [r5, #8]
 8001406:	6833      	ldr	r3, [r6, #0]
 8001408:	612b      	str	r3, [r5, #16]
 800140a:	b007      	add	sp, #28
 800140c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800140e:	46c0      	nop			@ (mov r8, r8)
 8001410:	0800149a 	.word	0x0800149a
 8001414:	200001d8 	.word	0x200001d8
 8001418:	200001dc 	.word	0x200001dc
 800141c:	200001d4 	.word	0x200001d4
 8001420:	200001d0 	.word	0x200001d0

08001424 <_isatty>:
 8001424:	b570      	push	{r4, r5, r6, lr}
 8001426:	f7ff fd89 	bl	8000f3c <findslot>
 800142a:	2409      	movs	r4, #9
 800142c:	1e05      	subs	r5, r0, #0
 800142e:	d104      	bne.n	800143a <_isatty+0x16>
 8001430:	f7ff fb06 	bl	8000a40 <__errno>
 8001434:	6004      	str	r4, [r0, #0]
 8001436:	2000      	movs	r0, #0
 8001438:	bd70      	pop	{r4, r5, r6, pc}
 800143a:	1c20      	adds	r0, r4, #0
 800143c:	1c29      	adds	r1, r5, #0
 800143e:	beab      	bkpt	0x00ab
 8001440:	1c04      	adds	r4, r0, #0
 8001442:	0020      	movs	r0, r4
 8001444:	2c01      	cmp	r4, #1
 8001446:	d0f7      	beq.n	8001438 <_isatty+0x14>
 8001448:	f7ff fafa 	bl	8000a40 <__errno>
 800144c:	2513      	movs	r5, #19
 800144e:	0004      	movs	r4, r0
 8001450:	2600      	movs	r6, #0
 8001452:	1c28      	adds	r0, r5, #0
 8001454:	1c31      	adds	r1, r6, #0
 8001456:	beab      	bkpt	0x00ab
 8001458:	1c05      	adds	r5, r0, #0
 800145a:	6025      	str	r5, [r4, #0]
 800145c:	e7eb      	b.n	8001436 <_isatty+0x12>
	...

08001460 <_init>:
 8001460:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001462:	46c0      	nop			@ (mov r8, r8)
 8001464:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001466:	bc08      	pop	{r3}
 8001468:	469e      	mov	lr, r3
 800146a:	4770      	bx	lr

0800146c <_fini>:
 800146c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800146e:	46c0      	nop			@ (mov r8, r8)
 8001470:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001472:	bc08      	pop	{r3}
 8001474:	469e      	mov	lr, r3
 8001476:	4770      	bx	lr
